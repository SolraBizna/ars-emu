This is unifont.info, produced by makeinfo version 5.2 from
unifont.texi.

This tutorial describes Unifont, a bitmap-based font covering the
Unicode Basic Multilingual Plane and beyond, and its utility programs.

Copyright (C) 2008-2014 Paul Hardy

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with no Front-Cover Texts
     and no Back-Cover Texts.

INFO-DIR-SECTION Fonts
START-INFO-DIR-ENTRY
* Unifont (unifont).  A bitmap-based font covering the Unicode BMP.
END-INFO-DIR-ENTRY


File: unifont.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)

* Menu:

* Introduction:: General overview.
* Tutorial:: Tutorial on Unifont utilities and Unifont modification.
* Reference:: Detailed description of each Unifont utility.


File: unifont.info,  Node: Introduction,  Next: Tutorial,  Prev: Top,  Up: Top

1 Introduction
**************

This document describes the process of using the GNU Unifont utilities
to create a font.  The steps described in the "Using Graphical Tools"
section in the "Tutorial" chapter are more or less the steps that I
(Paul Hardy) followed to add thousands of glyphs to GNU Unifont, except
that I didn't have the luxury of just typing 'make' to make a new font
while adding those glyphs in the beginning.

I streamlined the font build process after I was done drawing the
Unicode 5.1 glyphs.

I know that plain ASCII text is *so* last millennium, especially for a
package related to Unicode.  Yet ASCII can be read with anything; hence
this format.

If you have questions, please email 'unifoundry@unifoundry.com'.  You
can check for the latest Unifont news at
'http://savannah.gnu.org/projects/unifont' and 'http://unifoundry.com'.
You can also submit a bug report through the
'http://savannah.gnu.org/projects/unifont' page.

DISCLAIMER: Donald Knuth warned in his Metafont book that if someone
started designing type, they would never again be able to look at a page
of text normally and just read its content.  There is a point of no
return beyond which a serious font designer begins looking at how
individual letters in a font on a page are drawn, and how they might be
improved.  Be warned!

-- Paul Hardy ('unifoundry@unifoundry.com') 2008, 2013


File: unifont.info,  Node: Tutorial,  Next: Reference,  Prev: Introduction,  Up: Top

2 Tutorial
**********

This chapter provides a step-by-step tutorial on using the Unifont
utility programs to modify a font in the GNU Unifont format.

* Menu:

* Unicode:: Brief Overview of The Unicode Standard.
* Unifont Structure:: The format of Unifont files.
* Hex File Format:: The 'unifont.hex' file format.
* Using Graphical Tools:: The Unifont graphical utilities.
* Using Hexdraw:: The Unifont ASCII utility for text editors.
* Checking Coverage:: Checking Unicode Basic Multilingual Plane coverage.
* Custom Builds:: Customizing the composition of a Unifont derivative.
* Viewing a Unifont File Interactively:: Using 'unifont-viewer'
* Seeing the Big Picture (Literally!):: Creating a Unifont poster.
* Combining Circles:: Glyphs with zero width.
* Installing Fonts on GNU/Linux:: font installation on Unix/Linux.
* Creating a Brand New Font:: advice on adding a new Unicode script.
* Updates to Unicode:: modifying Unifont for Unicode updates.


File: unifont.info,  Node: Unicode,  Next: Unifont Structure,  Prev: Tutorial,  Up: Tutorial

2.1 Unicode
===========

Unicode is an international standard to encode all the world's scripts
with one universal scheme.  Unicode is the default encoding for web
pages and is gaining popularity in many other applications.  To learn
more about Unicode, look at code charts, and see the latest
developments, check out

     http://unicode.org

Unifont follows the Unicode encoding scheme.  Unicode defines the
numeric value of a character, but does not define one particular font.
There can be (and are) many fonts that support a subset of Unicode
characters.

In 1998, Roman Czyborra observed that there was still no font, free or
commercial, with complete Unicode coverage.  He envisioned a low-quality
bitmapped font as an easy way to produce a font that covered much of the
Unicode standard.


File: unifont.info,  Node: Unifont Structure,  Next: Hex File Format,  Prev: Unicode,  Up: Tutorial

2.2 Unifont Structure
=====================

GNU Unifont is a bitmapped pixel font, which is also converted to an
outline TrueType font.  Roman Czyborra began this font in 1998 with a
goal of having one glyph rendered for each visible character in the
Unicode Basic Multilingual Plane (Plane 0, the first 65,536 characters).
His original writing on this is at 'http://czyborra.com/unifont/'.

(Note that the term "character" is used very loosely here for
simplicity; the Unicode Standard has a stricter definition of what
constitutes a character.)

The font is dual-width.  Each character is 16 pixels tall, and either 8
or 16 pixels wide.  The characters are stored in a unique .hex file
format invented by Roman Czyborra as a convenient way of giving each
character exactly a one line specification.  Conversion between this
.hex format and BDF font format is trivial.


File: unifont.info,  Node: Hex File Format,  Next: Using Graphical Tools,  Prev: Unifont Structure,  Up: Tutorial

2.3 Hex File Format
===================

By convention, files containing the Unifont native font format have the
extension ".hex".  Their format is extremely simple, consisting of two
fields separated with a colon (":") and ending with a newline.

The first field is the Unicode code point, in hexadecimal.  For all
Plane 0 code points, this is a four digit hexadecimal number.
Hexadecimal digits are (in order) 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C,
D, E, and F. The Unicode Standard uses a hexadecimal number to assign
each character a location.  These locations are called "code points" and
their range is 0 through 10FFFF, inclusive.

The range 0000 through FFFF, inclusive, is called the Basic Multilingual
Plane (BMP), or Plane 0.  This plane contains glyphs for most of the
world's modern writing scripts.

Unifont utilities support glyphs across the entire Unicode range.  The
current distribution includes glyphs for Unicode's Plane 0, Plane 1 (the
Supplemental Multilingual Plane, or SMP), and others.  Coverage of the
SMP is only partial.

The first field in a '.hex' file should be either four digits long for
the Basic Multilingual Plane, or six digits long for higher Unicode
planes, following the convention of the Unicode Standard.

The second field is a string of hexadecimal digits.  There are 32 digits
for a character that is 8 pixels wide, and 64 digits for a character
that is 16 pixels wide.

The good news is you don't have to worry about these long digit strings.
Roman Czyborra wrote a utility, 'hexdraw', to convert .hex fonts to a
form that can be edited with a plain text editor, then converted back
into .hex format.

Paul Hardy wrote two utilities to do the same thing except with
bitmapped graphics images for editing with a graphics editor:
'unihex2bmp' converts a block of 256 characters into a graphics file,
and 'unibmp2hex' converts such a graphics file back into .hex format.
These bitmaps display the 256 characters in a block arranged in a 16 by
16 character grid.  The graphics editor must maintain the image as a
monochrome (black and white) file, with one bit per pixel.  After
conversion from a .bmp file back to a .hex file, the next step is
conversion to a BDF font file.  A BDF file can only encode a pixel being
on or off (i.e., black or white only with no intermediate shades of
gray).

Andrew Miller later converted 'unihex2bmp' and 'unibmp2hex' to Perl,
then transformed them into 'unihex2png' and 'unipng2hex', respectively.
These programs convert Unifont .hex files to and from Portable Network
Graphics files.

These programs will probably handle glyphs beyond the BMP properly, but
that capability is considered experimental, as the focus was to cover
the BMP. The 'unihex2png' and 'unipng2hex' programs handle the full
Unicode code point range of 0x000000 through 0x10FFFF. The 'unihex2bmp'
and 'unibmp2hex' programs support the full 32-bit unsigned integer range
of 0x00000000 through 0xFFFFFFFF, but have not been tested extensively
beyond the Unicode BMP. The range of the C programs might be truncated
in the future to only cover to 0x10FFFF, the limit of the Unicode code
point space.

The latest release of the 'hexdraw' program works correctly with .hex
files having code points in the full Unicode range of U+0000 through
U+10FFFF.


File: unifont.info,  Node: Using Graphical Tools,  Next: Using Hexdraw,  Prev: Hex File Format,  Up: Tutorial

2.4 Using Graphical Tools
=========================

Let's look at an example.  Suppose you want to modify the Coptic letters
in the range U+2C80..U+2CFF ("U+" is Unicode shorthand).  These letters
are in the upper half of the block U+2C00..U+2CFF. The Unicode utilities
in this package refer to this as "page" 2C. ("Page" is not a Unicode
term -- it is just a term unique to this package to refer to a block of
256 code points/characters).

The steps to follow will be:

  1. Convert .hex version of the page 2C range as a 16 by 16 bitmapped
     grid.

  2. Modify the bitmap in any graphics editor, being careful to re-save
     it as a Windows Bitmap (.bmp) or Wireless Bitmap file when
     finished.

  3. Convert the modified bitmap back into a .hex font file.

  4. Merge the results with the original 'unifont.hex' file (or whatever
     its name might be).

  5. Run 'unidup' on the resulting file to guard against duplicate
     character definitions.

  6. Create the new bitmapped version of the font.

  7. Check the compiled font for duplicates.

  8. If there are duplicates, remove them and go back to Step 5.

  9. Create the new TrueType version or other versions of the font.

If the script has combining characters (such as accent glyphs), also add
their code points to the proper '*combining.txt' file in the directory
for the corresponding Unicode plane.  That way, when the font is
converted to TrueType those glyphs will have zero space.  For a script
with combining characters, all glyphs that can appear with combining
characters must have the same width so that the combining characters
will be properly positioned.

*Step 1:* Convert the .hex range into a bitmap grid.  Assuming our font
file is named 'unifont.hex', type

     unihex2bmp -p2C < unifont.hex > uni2C.bmp

*Step 2:* Modify 'uni2C.bmp' with your favorite graphics editor.  Note
that whatever graphics editor you use must preserve the file as a black
and white bitmap (monochrome), with one bit per pixel.  During editing,
you can draw guidelines outside the actual 16x16 font pixel area; they
will be ignored when converting back into .hex format.  You can also
erase the grid borders between code points on purpose or by accident,
and it will have no effect on the generated .hex file.  Just don't erase
the code point numbers on the outer edges of the grid.  The conversion
from .bmp back to .hex only looks at the "U+0000" in the upper left-hand
corner of the bitmap graphic and other code point numbers, and at each
code point's 16x16 pixel area inside its 32x32 pixel grid area.  Every
other artifact in the final graphics file outside these areas is
ignored.

If a new version of Unicode adds glyphs to a page that were previously
unassigned, be sure to remove the newly-assigned code points from the
'unassigned.hex' file because the code point is no longer unassigned.

*Step 3:* Convert the edited .bmp file back into .hex format:

     unibmp2hex < uni2C.bmp > uni2C.hex

Note that the conversion from a bitmap image to a .hex file can't
distinguish between a legitimate single- or double-width space character
and a code point that does not have an assigned value.  Therefore, space
glyphs are separately contained in the 'spaces.hex' file.

*Step 4:* Merge the results with the original 'unifont.hex' file.  This
requires several sub-steps:

   * Edit the original 'unifont.hex' file and delete the lines that
     begin with "2C".

   * Insert the 'uni2C.hex' file into 'unifont.hex', either with a text
     editor such as 'emacs' or 'vi', or with a GNU/Linux command such
     as:

          sort uni2C.hex unifont.hex > new-unifont.hex

     This second option (using 'sort') is preferred, because 'unidup'
     (in Step 5) might miss duplicate code points if your final result
     isn't in proper order.

*Step 5:* Make sure there are no duplicates with 'unidup':

     unidup < unifont.hex

or

     unidup < new-unifont.hex

depending on the name of your final font file.  If there is no output,
your modified font contains no duplicates.

This editing is best done on an input .hex file, such as
'unifont-base.hex'.

*Step 6:* Create the new bitmapped version of the font.  In the 'font/'
directory, type

     make hex

*Step 7:* Check the compiled font for duplicates.  Change to the
'font/compiled/' directory and run

     unidup < mynewfontfile.hex

for whatever font file you created.

*Step 8:* If there are duplicates, remove them in the 'font/' directory
and go back to Step 5.

*Step 9:* Create the new TrueType version of the font and all other
bitmapped versions.  From the 'font/' directory, type

     make distclean && make

Then be prepared to wait a long time unless you are using a computer
with plenty of RAM and CPU horsepower.  Your computer should have at
least 256 Megabytes of virtual memory (RAM), and at least 250 Megabytes
of free disk space.

To only create a BDF font, in the 'font/' directory just type

     make bdf

To only create a BDF and PCF font, in the 'font/' directory type

     make pcf

Creating a BDF font is the first step in creating a PCF font (not
counting generating the compiled master ".hex" input file).  BDF fonts
can be created just with the tools in this package.  PCF fonts are
created by running 'bdftopcf' on the BDF font.  TrueType fonts require
FontForge.

The Unifont package also includes two new programs for working with
Portable Network Graphics (PNG) files instead of BMP files.  These
utilities are 'unihex2png' and 'unipng2hex'.  They work in a similar
manner to the corresponding programs 'unihex2bmp' and 'unibmp2hex',
respectively.

To use 'unihex2png' instead of 'unihex2bmp', continuing the example of
the Coptic script in the U+2Cxx range, type:

     unihex2png -p 2C -i unifont.hex -o uni2C.png

Note that with 'unihex2bmp' specifying input and output files is
optional, while with 'unihex2png' at least the PNG filename must be
specified explicitly.  More specifically, 'unihex2png' will read a .hex
file format input from STDIN if no "-i" argument is specified, but the
name of the binary PNG file must always be specified with the "-o"
option.

Then edit the resulting PNG file to your heart's content.  When done,
convert the file back into a 'unifont.hex' format file.  In this
example, type:

     unipng2hex -i uni2C.png -o uni2C.hex

Similar to 'unihex2png', the binary PNG file must be specified with "-i"
but the .hex format file will be written to STDOUT if the "-o" option is
omitted.

Finally, merge your changes in with your main .hex font file as
described previously in this section.


File: unifont.info,  Node: Using Hexdraw,  Next: Checking Coverage,  Prev: Using Graphical Tools,  Up: Tutorial

2.5 Using Hexdraw
=================

Roman Czyborra's original utility to edit glyphs is the 'hexdraw' Perl
script.  Using the same script as in the previous chapter, Coptic, here
are the steps for modifying 'unifont.hex' using 'hexdraw'.

First, realize that Unifont has tens of thousands of glyphs (characters,
using the term character loosely).  In this example, out of the tens of
thousands of glyphs, we want to modify the range U+2C80..U+2CFF (only
128 glyphs).

The range U+2C80..U+2CFF could be extracted from 'unifont.hex' by using
the 'egrep' utility to look for lines beginning with "2C8" through
"2CF", or that range could be isolated by copying 'unifont.hex' into
another file, and deleting all lines except the desired range.

The following steps will probably minimize typographical errors, but
they aren't the only way.

  1. "Grep" the desired block of 256 glyphs (using the 'grep' utility)
     and convert this into a text representation for editing.

  2. Edit the block with a text editor, such as 'emacs' or 'vi'.

  3. Convert the edited text file back into .hex format.

  4. Delete the edited block range from the original font file.

  5. Merge the two .hex files into one file.

  6. Check for duplicates with 'unidup'.

  7. Generate new fonts as described in the "Using Graphical Tools"
     section above.

*Step 1:* Extract the desired block with 'grep':

     grep "^2C" unifont.hex | hexdraw > uni2C.txt

*Step 2:* Edit 'uni2C.txt' with a text editor.

*Step 3:* Convert the text file back into .hex format:

     hexdraw < uni2C.txt > uni2C.hex

*Step 4:* Delete the lines in the original 'unifont.hex' file that begin
with "2C".

*Step 5:* Merge the two files:

     sort unifont.hex uni2C.hex > new-unifont.hex

or use Roman's 'hexmerge' utility:

     hexmerge unifont.hex uni2C.hex > new-unifont.hex

*Step 6:* Check for duplicates:

     unidup < new-unifont.hex

Of course, remove any reported duplicates.

*Step 7:* Build the font as in the "Using Graphical Tools" section
above.  This can be as simple as typing

     make

in the 'font/' directory.

I (Paul Hardy) had only used 'hexdraw' in the very beginning of my work
on Unifont.  Once I got my graphics programs working, I ignored it for
months.  Then I wanted to go through all of the Yi Syllables and Yi
Radicals -- over 1000 glyphs -- to fine-tune their horizontal alignment
after I drew them.  'hexdraw' turned out to be the perfect tool for
this.  By printing hyphens ("-") as place holders where a pixel is off,
it allowed me to verify space to the left and right of each character.
I later used 'hexdraw' for similar fine-tuning of spacing on Hangul and
other glyphs.  It is ideal for the task.


File: unifont.info,  Node: Checking Coverage,  Next: Custom Builds,  Prev: Using Hexdraw,  Up: Tutorial

2.6 Checking Coverage
=====================

There should never be duplicates in a .hex file.  If there are, remove
them before the .hex font is turned into a BDF or other font file.  The
recommendations above include making liberal use of 'unidup' to avoid
such a situation.

The 'unipagecount' program will print a hexadecimal number of code
points that have coverage within each 256 code point block.  The
hexadecimal number will therefore range from 0 (no coverage) to 100 (=
256 decimal; full coverage).  If a number is ever more than 100
hexadecimal, there's an extra character (glyph) for that page.

To further look at the coverage within just one 256 code point page
(using page 2C, containing Coptic, as our example) use

     unipagecount -p2C < unifont.hex

Note that the "page number" can use upper- or lower-case letters: '-p2C'
or '-p2c' will both work.  That will print a 16 x 16 grid of
U+2C00..U+2CFF. Of course, without placeholder glyphs for the unassigned
code points from 'unassigned.hex' in the U+2C00..U+2CFF range,
unipagecount can give a lower number than the true coverage.

Using the '-l' flag with 'unipagecount' will produce an HTML table with
links to corresponding graphics images.  You can get an idea of how this
works in the 'font/compiled/' directory after running 'make'; the
'index.html' file in that directory will have a table with links to the
256 glyph maps in the 'font/compiled/bmp/' subdirectory.

With 'unipagecount', the background color of the cells will range from
red (for 0% complete in that 256 code point block) to orange (a little
coverage) to yellow (more coverage) to green (complete coverage).  If a
cell looks light red or pink, the corresponding code page probably has
duplicate characters.  Verify that with

     sort unifont.hex | unidup

(substituting the name of your .hex file for 'unifont.hex').

To see the coverage of each Unicode script, copy the file
'font/coverage.dat' into the same directory as the 'unifont.hex' file
you're examining.  Then run

     unicoverage < unifont.hex > coverage.out

This will give you all the scripts within the Unicode Basic Multilingual
Plane, in order, with a percentage (0.0% through 100.0%) of each
script's coverage.  Note that to get the true coverage of assigned code
points, you'll have to merge 'unassigned.hex' with the rest of
'unifont.hex' if not done by default in your setup.

Using the .hex files in 'font/plane00/', you can create a font with all
available glyphs with

     sort font/plane00/*.hex >unifont-whole.hex

and run 'unicoverage' using the resulting 'unifont-whole.hex' file.


File: unifont.info,  Node: Custom Builds,  Next: Viewing a Unifont File Interactively,  Prev: Checking Coverage,  Up: Tutorial

2.7 Custom Builds
=================

The font can be built from within the 'font/' directory by simply typing

     make

From the top-level directory (one level above the 'font/' directory),
typing

     make BUILDFONT=1

will also build the font.  The font is not built by default by typing
'make' from the top-level directory, because a pre-built version already
exists in the 'font/precompiled/' directory.  Font files are
architecture-independent, so the only reason to build the font is if you
modify its composition.

By default, source glyphs are read from the 'font/plane00/' directory.
Glyphs for unassigned code points are built into the font by default,
but glyphs for Private Use Area code points are not built into the font.

All of the .hex file names can be replaced selectively on the 'make'
command line to override their default values.  Their locations are
relative to the 'font/' directory.  The list of component hex file
variables is:

'UNIFONTBASE'
     The bulk of Unifont scripts

'CJK'
     Most of the CJK Ideographs

'HANGUL'
     Hangul Syllables block

'SPACES'
     Space glyphs, single- and double-width

'UNASSIGNED'
     Glyphs for unassigned code points

'PUA'
     Glyphs for the Private Use Area

So, for example, to build a font that includes four-digit hexadecimal
code point glyphs (as white digits on a black background) for the
Private Use Area, type

     make PUA="plane00/pua.hex"

because those glyphs reside in the 'font/plane00/pua.hex' file.

To build a font that includes your own special PUA glyphs, type

     make PUA="my-cool-PUA.hex"

or whatever the name of your PUA glyph .hex file is named.

To create a build that includes the supplied PUA glyphs but not the
unassigned code point glyphs, type

     make PUA="plane00/pua.hex" UNASSIGNED=""

If you create a custom font build of your own in one gigantic file, you
can build with just this file by declaring all the ordinary files to be
null:

     make UNIFONTBASE="mycustomfont.hex" \ 

     CJK="" HANGUL="" UNASSIGNED="" PUA=""

Note that this command did not include an override for the glyphs for
spaces contained in the 'font/plane00/spaces.hex' file; that is, the
variable SPACES was not redefined on the command line.  You could also
pass the argument SPACES="", but just be aware that those spaces glyphs
are in a separate file for a reason.  When graphical (".bmp") glyph
files are converted back into hex string (".hex") format, the
'unibmp2hex' utility doesn't know if a blank glyph area is a space glyph
or not, so it doesn't encode anything.  The 'font/plane00/spaces.hex'
file contains glyphs that are strings of 0s, with length depending on
whether the space is nominally a single- or double-width space.
(Unifont does not distinguish between finer spacing used in traditional
typesetting, such as a thin space, en space, em space, or quad space;
all spaces are either 8 pixels wide or 16 pixels wide.)


File: unifont.info,  Node: Viewing a Unifont File Interactively,  Next: Seeing the Big Picture (Literally!),  Prev: Custom Builds,  Up: Tutorial

2.8 Viewing a Unifont File Interactively
========================================

The 'unifont-viewer' Perl script uses the 'wxWidgets' Perl library to
present a dynamic graphical representation of a Unifont hex file.  This
is a convenient way to scan quickly through a complete Unifont hex file.
It is ideal for scanning through a Unifont hex source file after you
have made changes.

Use 'unifont-viewer' to open any Unifont hex file, whether in the Basic
Multilingual Plane up to the maximum Unicode code point of U+10FFFF. The
font is displayed graphically in sections of 16-by-16 glyph grids (256
glyphs--a "page" in Unifont lingo).  The page numbers (the upper portion
of the hexadecimal code point range) appear in a list along the
left-hand side.  Only page ranges that are present in the Unifont hex
file are listed.

When 'unifont-viewer' loads a hex file, it begins by displaying the
first "page" range in that file.


File: unifont.info,  Node: Seeing the Big Picture (Literally!),  Next: Combining Circles,  Prev: Viewing a Unifont File Interactively,  Up: Tutorial

2.9 Seeing the Big Picture (Literally!)
=======================================

The GNU Unifont 6.3 release introduced a new program, 'unifontpic'.
This produces a chart of all the Basic Multilingual Plane glyphs in
Unifont.  By default the chart is arranged as a 256-by-256 glyph table.
Specifying the '-l' option produces a chart that is 16 glyphs wide by
4,096 glyphs long.  See unifontpic(1) for more information.

The "long" version, created with 'unifontpic -l', only produces 16
glyphs per row.  This is more useful for scrolling through on a computer
screen.

GIMP, the GNU Image Manipulation Program, will properly display the
resulting long .bmp file (at least under GNOME), but not all graphics
utilities can.  The output file is over 65,536 pixel rows tall, which
causes problems with some graphics programs.

To generate a chart with all your glyphs in one giant 'unifont.hex'
file, type the command

     unifontpic < unifont.hex > unifont.bmp

The output is a monochrome Bitmap Graphics Format (.bmp) file.  If you
prefer PNG files, use your favorite graphics program or conversion
program to convert the BMP file to a PNG file.

This utility is especially useful if you're customizing the font, for
example if adding your own Private Use Area glyphs.

The default 256-by-256 code point chart will render satisfactorily on a
sheet of paper approximately 3 feet by 3 feet (1 meter by 1 meter) at
120 dots per inch.  Thus the square format is suitable for printing.


File: unifont.info,  Node: Combining Circles,  Next: Installing Fonts on GNU/Linux,  Prev: Seeing the Big Picture (Literally!),  Up: Tutorial

2.10 Combining Circles
======================

The earliest versions of Unifont (before the 5.1 release) used glyphs
that showed dashed circles for combining characters.  This is how the
glyphs appear in The Unicode Standard code charts.  In version 5.1, Paul
Hardy was able to get combining characters to appear superimposed
correctly in the TrueType version of the font.  (There are no plans to
try to get combining characters to work in a BDF or PCF version owing to
the limitations of those bitmapped font formats.)

With combining characters working in the TrueType font, Paul Hardy
created variations of Unifont with and without combining circles, the
idea being that the version without combining circles would be used to
create the TrueType font.  The variation with combining circles was kept
for reference.

Unifont Version 6.2 simplified the build to produce only one font
variation, without combining circles.

Unifont Version 6.3 introduced a new utility, 'unigencircles', to
superimpose combining circles over glyphs with code points in a
'combining.txt' file.

The latest Unifont release contains a parallel set of font files named
'unifont_sample.*'.  These "Unifont Sample" font files contain glyphs
with combining circles where appropriate.  The "Unifont Sample" font is
therefore not intended for general-purpose writing, but only for
illustrating each individual glyph as represented in The Unicode
Standard.

To run 'unigencircles', start with the file 'font/ttfsrc/combining.txt'
and type a command of this form:

     unigencircles combining.txt < unifont.hex > unifont-circles.hex

where 'unifont.hex' is a single file containing all the glyphs you wish
to render.  You could create such a file from the 'font/' directory with
the command

     sort plane00/*.hex >unifont.hex

Because the output is another .hex file, you can use all Unifont
utilities with this resulting file just as you would with the .hex files
in 'font/plane00/'.

If you want to build a font from this generated 'unifont.hex' file, you
could type

     make UNIFONTBASE="unifont-circles.hex" CJK="" HANGUL="" \ 

     UNASSIGNED="" PUA=""

as discussed above.  In this case, if you included
'font/plane00/spaces.hex' in the 'unifont.hex' input file, you should
also set SPACES="" on the command line so that you only read in your
final custom 'unifont-circles.hex' file.


File: unifont.info,  Node: Installing Fonts on GNU/Linux,  Next: Creating a Brand New Font,  Prev: Combining Circles,  Up: Tutorial

2.11 Installing Fonts on GNU/Linux
==================================

The original standard font format of Unifont was a BDF font.  The newer
PCF font format loads much faster when a program begins, and so is
preferable for installations using the X Window System and similar
environments.

Compress PCF fonts using

     gzip -9 fontname.pcf

Copy the resulting 'fontname.pcf.gz' file to
'/usr/share/fonts/X11/misc/' or place in a local font directory if your
windowing software supports that (for example, '~/.fonts/').

Copy TrueType fonts to '/usr/share/fonts/truetype/' uncompressed or
place in your local font directory.  Note: on some versions of Unix,
such as Solaris, the name of the TrueType directory might be TrueType
and might be under '/usr/share/fonts/X11/' -- examine the system fonts
directories, then modify the font 'make install' rule accordingly.

On most flavors of GNU/Linux with the latest 'xset' utility (including
the latest Debian and Red Hat releases), the following command should
allow you to start using the font immediately:

     xset fp rehash

The safest way to make sure the system knows about the new fonts will be
to restart the X Window System or even reboot.


File: unifont.info,  Node: Creating a Brand New Font,  Next: Updates to Unicode,  Prev: Installing Fonts on GNU/Linux,  Up: Tutorial

2.12 Creating a Brand New Font
==============================

The original tools will only produce glyphs that are 16 pixels tall, and
either 8 or 16 pixels wide.  The utilities 'unihex2png', 'unipng2hex',
'hexdraw', and 'hex2bdf' now also support glyph heights of 24 and 32
pixels, and glyph widths of 8, 16, 24, and 32 pixels, but this is not
fully tested.  These new dimensions are currently available for
experimental use.  See the respective sections for each of these
programs in the Reference chapter of this document, or their respective
man pages.

To create a brand new font (or even to add a new script to Unifont in
the future), plan out the basic dimensions of the characters:

   * How far above the lowest pixel will the baseline appear (in other
     words, how many rows are necessary for descenders such as in the
     glyphs for 'g', 'q', and 'y')?

   * How many pixels must be empty on top and bottom for accents (in
     other words, what will the height of capital letters be)?

   * Must glyphs be centered, left-aligned, or right-aligned?

   * For a Latin font, what will the "x-height" be (the height of a
     lower-case "x" and related letters, such as "n" and "r")?

Consistent capital heights, x-heights, descender depths, and centering
will produce a better looking font.  Look over the entire script and
plan out a template grid that is consistent for the entire script.  Then
use that template for each glyph you draw for the script.

Unifont characters for the most part leave the left-most or right-most
column of pixels blank if possible (consistent within each script) for
left-to-right scripts.  Centering is done around the fourth pixel (if a
glyph is eight pixels wide) or around the eighth pixel (if a glyph is 16
pixels wide).

Experimenting and (above all) having fun with these utilities is the
best way to learn.


File: unifont.info,  Node: Updates to Unicode,  Prev: Creating a Brand New Font,  Up: Tutorial

2.13 Updates to Unicode
=======================

If a currently unassigned code point is assigned to a character in the
future, the font can be updated as follows:

  1. Delete the code point's entry from 'font/plane00/unassigned.hex',
     as that code point will no longer be unassigned.

  2. Determine which existing .hex file should contain the newly defined
     character (examine the files to see which one contains other glyphs
     in the script.

        * 'unifont-base.hex' contains most scripts

        * 'wqy.hex' contains most CJK ideographs; its name pays homage
          to the Wen Quan Yi font, the source of almost all of its
          glyphs

        * 'hangul-syllables.hex' contains the Hangul Syllables block
          (U+AC00..U+D7A3); this should never have new code points added
          as it covers the fixed range of the Unicode Hangul Syllables
          block

        * 'spaces.hex' contains the list of single- and double-width
          spaces

     If in doubt (for example, if a new script is added to Unicode and
     you're not sure which .hex file to augment), add the new glyphs to
     'unifont-base.hex'.

  3. Update the appropriate .hex file.

  4. Consider if 'font/coverage.dat' has to be updated.  Follow its
     existing format to insert a new script, being sure to change any
     previously unassigned ranges before or after the newly added
     script.

  5. Make a new .hex version of the font, and verify that you didn't
     introduce any duplicates.

  6. Run 'unipagecount' and/or 'unicoverage' as described previously to
     verify that you have not mistakenly deleted any existing
     characters.

Enjoy!


File: unifont.info,  Node: Reference,  Prev: Tutorial,  Up: Top

3 Reference
***********

* Menu:

* bdfimplode::
* hex2bdf::
* hex2sfd::
* hexbraille::
* hexdraw::
* hexkinya::
* hexmerge::
* johab2ucs2::
* unibdf2hex::
* unibmp2hex::
* unicoverage::
* unidup::
* unifont-viewer::
* unifontchojung::
* unifontksx::
* unifontpic::
* unigencircles::
* unigenwidth::
* unihex2bmp::
* unihex2png::
* unihexfill::
* unihexgen::
* unipagecount::
* unipng2hex::


File: unifont.info,  Node: bdfimplode,  Next: hex2bdf,  Up: Reference

3.1 bdfimplode
==============

* Menu:

* bdfimplode NAME::
* bdfimplode SYNOPSIS::
* bdfimplode DESCRIPTION::
* bdfimplode FILES::
* bdfimplode SEE ALSO::
* bdfimplode AUTHOR::
* bdfimplode LICENSE::
* bdfimplode BUGS::


File: unifont.info,  Node: bdfimplode NAME,  Next: bdfimplode SYNOPSIS,  Up: bdfimplode

3.1.1 bdfimplode NAME
---------------------

bdfimplode - Convert a BDF font into GNU Unifont .hex format


File: unifont.info,  Node: bdfimplode SYNOPSIS,  Next: bdfimplode DESCRIPTION,  Prev: bdfimplode NAME,  Up: bdfimplode

3.1.2 bdfimplode SYNOPSIS
-------------------------

bdfimplode < input-font.bdf > output-font.hex


File: unifont.info,  Node: bdfimplode DESCRIPTION,  Next: bdfimplode FILES,  Prev: bdfimplode SYNOPSIS,  Up: bdfimplode

3.1.3 bdfimplode DESCRIPTION
----------------------------

bdfimplode reads a BDF font from STDOUT and writes GNU Unifont .hex
conversion of the font to STDOUT.


File: unifont.info,  Node: bdfimplode FILES,  Next: bdfimplode SEE ALSO,  Prev: bdfimplode DESCRIPTION,  Up: bdfimplode

3.1.4 bdfimplode FILES
----------------------

*.bdf font files


File: unifont.info,  Node: bdfimplode SEE ALSO,  Next: bdfimplode AUTHOR,  Prev: bdfimplode FILES,  Up: bdfimplode

3.1.5 bdfimplode SEE ALSO
-------------------------

hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1), hexkinya(1),
hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: bdfimplode AUTHOR,  Next: bdfimplode LICENSE,  Prev: bdfimplode SEE ALSO,  Up: bdfimplode

3.1.6 bdfimplode AUTHOR
-----------------------

bdfimplode was written by Roman Czyborra.


File: unifont.info,  Node: bdfimplode LICENSE,  Next: bdfimplode BUGS,  Prev: bdfimplode AUTHOR,  Up: bdfimplode

3.1.7 bdfimplode LICENSE
------------------------

bdfimplode is Copyright (C) 1998 Roman Czyborra.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: bdfimplode BUGS,  Prev: bdfimplode LICENSE,  Up: bdfimplode

3.1.8 bdfimplode BUGS
---------------------

bdfimplode was written to read a BDF file created by the hex2bdf script.
It will not properly handle other BDF files with differing bounding
boxes.


File: unifont.info,  Node: hex2bdf,  Next: hex2sfd,  Prev: bdfimplode,  Up: Reference

3.2 hex2bdf
===========

* Menu:

* hex2bdf NAME::
* hex2bdf SYNOPSIS::
* hex2bdf DESCRIPTION::
* hex2bdf OPTIONS::
* hex2bdf EXAMPLE::
* hex2bdf FILES::
* hex2bdf SEE ALSO::
* hex2bdf AUTHOR::
* hex2bdf LICENSE::
* hex2bdf BUGS::


File: unifont.info,  Node: hex2bdf NAME,  Next: hex2bdf SYNOPSIS,  Up: hex2bdf

3.2.1 hex2bdf NAME
------------------

hex2bdf - Convert a GNU Unifont .hex file into a BDF font


File: unifont.info,  Node: hex2bdf SYNOPSIS,  Next: hex2bdf DESCRIPTION,  Prev: hex2bdf NAME,  Up: hex2bdf

3.2.2 hex2bdf SYNOPSIS
----------------------

hex2bdf < input-font.hex > output-font.bdf


File: unifont.info,  Node: hex2bdf DESCRIPTION,  Next: hex2bdf OPTIONS,  Prev: hex2bdf SYNOPSIS,  Up: hex2bdf

3.2.3 hex2bdf DESCRIPTION
-------------------------

hex2bdf reads a sorted GNU Unifont .hex file (sorted with the Unix sort
utility) from STDIN and writes a BDF version of the font to STDOUT.


File: unifont.info,  Node: hex2bdf OPTIONS,  Next: hex2bdf EXAMPLE,  Prev: hex2bdf DESCRIPTION,  Up: hex2bdf

3.2.4 hex2bdf OPTIONS
---------------------

'-f "font-name"'
     Specify the target font name.  If omitted, the default font name
     "Unifont" is assigned.

'-v "font-version"'
     Specify the target font version.  If omitted, the default version
     "1.0" is assigned.

'-c "font-copyright"'
     Specify the target font copyright information.  The default is the
     null string.

'-r <pixel-rows>'
     Specify how many pixel rows tall a glyph is.  The default is the
     traditional Unifont 16 rows of pixels.  This is an addition to
     support unihex2png(1) and unipng2hex(1), which allow designing
     glyphs that are 16, 24, or 32 pixel rows tall.


File: unifont.info,  Node: hex2bdf EXAMPLE,  Next: hex2bdf FILES,  Prev: hex2bdf OPTIONS,  Up: hex2bdf

3.2.5 hex2bdf EXAMPLE
---------------------

Sample usage:

     hex2bdf -f "Unifont" -c "(C) 2013..."  unifont.hex > unifont.bdf


File: unifont.info,  Node: hex2bdf FILES,  Next: hex2bdf SEE ALSO,  Prev: hex2bdf EXAMPLE,  Up: hex2bdf

3.2.6 hex2bdf FILES
-------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: hex2bdf SEE ALSO,  Next: hex2bdf AUTHOR,  Prev: hex2bdf FILES,  Up: hex2bdf

3.2.7 hex2bdf SEE ALSO
----------------------

bdfimplode(1), hex2sfd(1), hexbraille(1), hexdraw(1), hexkinya(1),
hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: hex2bdf AUTHOR,  Next: hex2bdf LICENSE,  Prev: hex2bdf SEE ALSO,  Up: hex2bdf

3.2.8 hex2bdf AUTHOR
--------------------

hex2bdf was written by Roman Czyborra.


File: unifont.info,  Node: hex2bdf LICENSE,  Next: hex2bdf BUGS,  Prev: hex2bdf AUTHOR,  Up: hex2bdf

3.2.9 hex2bdf LICENSE
---------------------

hex2bdf is Copyright (C) 1998 Roman Czyborra.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: hex2bdf BUGS,  Prev: hex2bdf LICENSE,  Up: hex2bdf

3.2.10 hex2bdf BUGS
-------------------

No known bugs exist.  Support for glyph heights other than 16 pixels is
brand new and has not been extensively tested.


File: unifont.info,  Node: hex2sfd,  Next: hexbraille,  Prev: hex2bdf,  Up: Reference

3.3 hex2sfd
===========

* Menu:

* hex2sfd NAME::
* hex2sfd SYNOPSIS::
* hex2sfd DESCRIPTION::
* hex2sfd FILES::
* hex2sfd SEE ALSO::
* hex2sfd AUTHOR::
* hex2sfd LICENSE::
* hex2sfd BUGS::


File: unifont.info,  Node: hex2sfd NAME,  Next: hex2sfd SYNOPSIS,  Up: hex2sfd

3.3.1 hex2sfd NAME
------------------

hex2sfd - Convert a GNU Unifont .hex file into a FontForge .sfd format


File: unifont.info,  Node: hex2sfd SYNOPSIS,  Next: hex2sfd DESCRIPTION,  Prev: hex2sfd NAME,  Up: hex2sfd

3.3.2 hex2sfd SYNOPSIS
----------------------

hex2sfd < input-font.hex > output-font.sfd


File: unifont.info,  Node: hex2sfd DESCRIPTION,  Next: hex2sfd FILES,  Prev: hex2sfd SYNOPSIS,  Up: hex2sfd

3.3.3 hex2sfd DESCRIPTION
-------------------------

hex2sfd reads a GNU Unifont .hex file from STDIN and writes an outline
font representation in FontForge Spline Font Database (.sfd) format.
The resulting .sfd file can then be converted by FontForge into a
TrueType .ttf font.


File: unifont.info,  Node: hex2sfd FILES,  Next: hex2sfd SEE ALSO,  Prev: hex2sfd DESCRIPTION,  Up: hex2sfd

3.3.4 hex2sfd FILES
-------------------

GNU Unifont .hex font files for input, FontForge .sfd font files for
output


File: unifont.info,  Node: hex2sfd SEE ALSO,  Next: hex2sfd AUTHOR,  Prev: hex2sfd FILES,  Up: hex2sfd

3.3.5 hex2sfd SEE ALSO
----------------------

bdfimplode(1), hex2bdf(1), hexbraille(1), hexdraw(1), hexkinya(1),
hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: hex2sfd AUTHOR,  Next: hex2sfd LICENSE,  Prev: hex2sfd SEE ALSO,  Up: hex2sfd

3.3.6 hex2sfd AUTHOR
--------------------

hex2sfd was written by Luis Alejandro Gonzalez Miranda in 2005, with
modifications by Paul Hardy in 2008.


File: unifont.info,  Node: hex2sfd LICENSE,  Next: hex2sfd BUGS,  Prev: hex2sfd AUTHOR,  Up: hex2sfd

3.3.7 hex2sfd LICENSE
---------------------

hex2sfd is Copyright (C) 2005 Luis Alejandro Gonzalez Miranda, (C) 2008
Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: hex2sfd BUGS,  Prev: hex2sfd LICENSE,  Up: hex2sfd

3.3.8 hex2sfd BUGS
------------------

No known bugs exist.


File: unifont.info,  Node: hexbraille,  Next: hexdraw,  Prev: hex2sfd,  Up: Reference

3.4 hexbraille
==============

* Menu:

* hexbraille NAME::
* hexbraille SYNOPSIS::
* hexbraille DESCRIPTION::
* hexbraille FILES::
* hexbraille SEE ALSO::
* hexbraille AUTHOR::
* hexbraille LICENSE::
* hexbraille BUGS::


File: unifont.info,  Node: hexbraille NAME,  Next: hexbraille SYNOPSIS,  Up: hexbraille

3.4.1 hexbraille NAME
---------------------

hexbraille - Algorithmically generate the Unicode Braille range (U+28xx)


File: unifont.info,  Node: hexbraille SYNOPSIS,  Next: hexbraille DESCRIPTION,  Prev: hexbraille NAME,  Up: hexbraille

3.4.2 hexbraille SYNOPSIS
-------------------------

hexbraille > output-font.hex


File: unifont.info,  Node: hexbraille DESCRIPTION,  Next: hexbraille FILES,  Prev: hexbraille SYNOPSIS,  Up: hexbraille

3.4.3 hexbraille DESCRIPTION
----------------------------

hexbraille generates a GNU Unifont .hex format file (written on stdout)
containing the Braille dot patterns in the Unicode range U+2800..U+28FF.


File: unifont.info,  Node: hexbraille FILES,  Next: hexbraille SEE ALSO,  Prev: hexbraille DESCRIPTION,  Up: hexbraille

3.4.4 hexbraille FILES
----------------------

braille.hex output font files


File: unifont.info,  Node: hexbraille SEE ALSO,  Next: hexbraille AUTHOR,  Prev: hexbraille FILES,  Up: hexbraille

3.4.5 hexbraille SEE ALSO
-------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexdraw(1), hexkinya(1),
hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: hexbraille AUTHOR,  Next: hexbraille LICENSE,  Prev: hexbraille SEE ALSO,  Up: hexbraille

3.4.6 hexbraille AUTHOR
-----------------------

hexbraille was written by Roman Czyborra, who named this script
"braille.pl".  In 2003, Roman incorporated a bug fix from Dominique at
unruh.de.


File: unifont.info,  Node: hexbraille LICENSE,  Next: hexbraille BUGS,  Prev: hexbraille AUTHOR,  Up: hexbraille

3.4.7 hexbraille LICENSE
------------------------

hexbraille is Copyright (C) 1998 Roman Czyborra.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: hexbraille BUGS,  Prev: hexbraille LICENSE,  Up: hexbraille

3.4.8 hexbraille BUGS
---------------------

No known bugs exist.


File: unifont.info,  Node: hexdraw,  Next: hexkinya,  Prev: hexbraille,  Up: Reference

3.5 hexdraw
===========

* Menu:

* hexdraw NAME::
* hexdraw SYNOPSIS::
* hexdraw DESCRIPTION::
* hexdraw FILES::
* hexdraw SEE ALSO::
* hexdraw AUTHOR::
* hexdraw LICENSE::
* hexdraw BUGS::


File: unifont.info,  Node: hexdraw NAME,  Next: hexdraw SYNOPSIS,  Up: hexdraw

3.5.1 hexdraw NAME
------------------

hexdraw - Convert a GNU Unifont .hex file to and from an ASCII text file


File: unifont.info,  Node: hexdraw SYNOPSIS,  Next: hexdraw DESCRIPTION,  Prev: hexdraw NAME,  Up: hexdraw

3.5.2 hexdraw SYNOPSIS
----------------------

hexdraw < input-font.hex > output-font.txt hexdraw < input-font.txt >
output-font.hex


File: unifont.info,  Node: hexdraw DESCRIPTION,  Next: hexdraw FILES,  Prev: hexdraw SYNOPSIS,  Up: hexdraw

3.5.3 hexdraw DESCRIPTION
-------------------------

hexdraw reads a sorted GNU Unifont .hex file from STDIN and writes a two
dimensional ASCII art rendering for each glyph to STDOUT. The output
file can be edited with any text editor, then converted back into a .hex
file.


File: unifont.info,  Node: hexdraw FILES,  Next: hexdraw SEE ALSO,  Prev: hexdraw DESCRIPTION,  Up: hexdraw

3.5.4 hexdraw FILES
-------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: hexdraw SEE ALSO,  Next: hexdraw AUTHOR,  Prev: hexdraw FILES,  Up: hexdraw

3.5.5 hexdraw SEE ALSO
----------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexkinya(1),
hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: hexdraw AUTHOR,  Next: hexdraw LICENSE,  Prev: hexdraw SEE ALSO,  Up: hexdraw

3.5.6 hexdraw AUTHOR
--------------------

hexdraw was written by Roman Czyborra.


File: unifont.info,  Node: hexdraw LICENSE,  Next: hexdraw BUGS,  Prev: hexdraw AUTHOR,  Up: hexdraw

3.5.7 hexdraw LICENSE
---------------------

hexdraw is Copyright (C) 1998 Roman Czyborra.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: hexdraw BUGS,  Prev: hexdraw LICENSE,  Up: hexdraw

3.5.8 hexdraw BUGS
------------------

No known bugs exist.


File: unifont.info,  Node: hexkinya,  Next: hexmerge,  Prev: hexdraw,  Up: Reference

3.6 hexkinya
============

* Menu:

* hexkinya NAME::
* hexkinya SYNOPSIS::
* hexkinya DESCRIPTION::
* hexkinya FILES::
* hexkinya SEE ALSO::
* hexkinya AUTHOR::
* hexkinya LICENSE::
* hexkinya BUGS::


File: unifont.info,  Node: hexkinya NAME,  Next: hexkinya SYNOPSIS,  Up: hexkinya

3.6.1 hexkinya NAME
-------------------

hexkinya - Create the Private Use Area Kinya syllables


File: unifont.info,  Node: hexkinya SYNOPSIS,  Next: hexkinya DESCRIPTION,  Prev: hexkinya NAME,  Up: hexkinya

3.6.2 hexkinya SYNOPSIS
-----------------------

hexkinya > plane15.hex


File: unifont.info,  Node: hexkinya DESCRIPTION,  Next: hexkinya FILES,  Prev: hexkinya SYNOPSIS,  Up: hexkinya

3.6.3 hexkinya DESCRIPTION
--------------------------

hexkinya contains pre-defined initial, middle, and final alphabet glyphs
to form syllables.  The output is the Kinya Syllables Private Use Area
block of the ConScript Unicode Registry (CSUR). The output range is
U+0F0000 through U+0FDE6F, inclusive.


File: unifont.info,  Node: hexkinya FILES,  Next: hexkinya SEE ALSO,  Prev: hexkinya DESCRIPTION,  Up: hexkinya

3.6.4 hexkinya FILES
--------------------

None.


File: unifont.info,  Node: hexkinya SEE ALSO,  Next: hexkinya AUTHOR,  Prev: hexkinya FILES,  Up: hexkinya

3.6.5 hexkinya SEE ALSO
-----------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: hexkinya AUTHOR,  Next: hexkinya LICENSE,  Prev: hexkinya SEE ALSO,  Up: hexkinya

3.6.6 hexkinya AUTHOR
---------------------

hexkinya was written by Andrew Miller.


File: unifont.info,  Node: hexkinya LICENSE,  Next: hexkinya BUGS,  Prev: hexkinya AUTHOR,  Up: hexkinya

3.6.7 hexkinya LICENSE
----------------------

hexkinya is Copyright (C) 2014 by Andrew Miller.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: hexkinya BUGS,  Prev: hexkinya LICENSE,  Up: hexkinya

3.6.8 hexkinya BUGS
-------------------

No known bugs exist.


File: unifont.info,  Node: hexmerge,  Next: johab2ucs2,  Prev: hexkinya,  Up: Reference

3.7 hexmerge
============

* Menu:

* hexmerge NAME::
* hexmerge SYNOPSIS::
* hexmerge DESCRIPTION::
* hexmerge FILES::
* hexmerge SEE ALSO::
* hexmerge AUTHOR::
* hexmerge LICENSE::
* hexmerge BUGS::


File: unifont.info,  Node: hexmerge NAME,  Next: hexmerge SYNOPSIS,  Up: hexmerge

3.7.1 hexmerge NAME
-------------------

hexmerge - Merge two or more GNU Unifont .hex font files into one


File: unifont.info,  Node: hexmerge SYNOPSIS,  Next: hexmerge DESCRIPTION,  Prev: hexmerge NAME,  Up: hexmerge

3.7.2 hexmerge SYNOPSIS
-----------------------

hexmerge input-font1.hex input-font2.hex > output-font.hex


File: unifont.info,  Node: hexmerge DESCRIPTION,  Next: hexmerge FILES,  Prev: hexmerge SYNOPSIS,  Up: hexmerge

3.7.3 hexmerge DESCRIPTION
--------------------------

hexmerge reads two or more GNU Unifont .hex files, sorts them, and
writes the combined font to stdout.


File: unifont.info,  Node: hexmerge FILES,  Next: hexmerge SEE ALSO,  Prev: hexmerge DESCRIPTION,  Up: hexmerge

3.7.4 hexmerge FILES
--------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: hexmerge SEE ALSO,  Next: hexmerge AUTHOR,  Prev: hexmerge FILES,  Up: hexmerge

3.7.5 hexmerge SEE ALSO
-----------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexkinya(1),
hexdraw(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1), unicoverage(1),
unidup(1), unifont(5), unifont-viewer(1), unifontchojung(1),
unifontksx(1), unifontpic(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: hexmerge AUTHOR,  Next: hexmerge LICENSE,  Prev: hexmerge SEE ALSO,  Up: hexmerge

3.7.6 hexmerge AUTHOR
---------------------

hexmerge was written by Roman Czyborra.


File: unifont.info,  Node: hexmerge LICENSE,  Next: hexmerge BUGS,  Prev: hexmerge AUTHOR,  Up: hexmerge

3.7.7 hexmerge LICENSE
----------------------

hexmerge is Copyright (C) 1998 Roman Czyborra.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: hexmerge BUGS,  Prev: hexmerge LICENSE,  Up: hexmerge

3.7.8 hexmerge BUGS
-------------------

No known bugs exist.


File: unifont.info,  Node: johab2ucs2,  Next: unibdf2hex,  Prev: hexmerge,  Up: Reference

3.8 johab2ucs2
==============

* Menu:

* johab2ucs2 NAME::
* johab2ucs2 SYNOPSIS::
* johab2ucs2 DESCRIPTION::
* johab2ucs2 FILES::
* johab2ucs2 SEE ALSO::
* johab2ucs2 AUTHOR::
* johab2ucs2 LICENSE::
* johab2ucs2 BUGS::


File: unifont.info,  Node: johab2ucs2 NAME,  Next: johab2ucs2 SYNOPSIS,  Up: johab2ucs2

3.8.1 johab2ucs2 NAME
---------------------

johab2ucs2 - Convert a Johab BDF font into GNU Unifont Hangul Syllables


File: unifont.info,  Node: johab2ucs2 SYNOPSIS,  Next: johab2ucs2 DESCRIPTION,  Prev: johab2ucs2 NAME,  Up: johab2ucs2

3.8.2 johab2ucs2 SYNOPSIS
-------------------------

johab2ucs2 < input-font.bdf > output-font.hex


File: unifont.info,  Node: johab2ucs2 DESCRIPTION,  Next: johab2ucs2 FILES,  Prev: johab2ucs2 SYNOPSIS,  Up: johab2ucs2

3.8.3 johab2ucs2 DESCRIPTION
----------------------------

johab2ucs2 reads a Johab encoded BDF font (as used in Hanterm) from
STDIN and writes a GNU Unifont .hex file containing the Unicode Hangul
Syllables to STDOUT.


File: unifont.info,  Node: johab2ucs2 FILES,  Next: johab2ucs2 SEE ALSO,  Prev: johab2ucs2 DESCRIPTION,  Up: johab2ucs2

3.8.4 johab2ucs2 FILES
----------------------

*.bdf font files


File: unifont.info,  Node: johab2ucs2 SEE ALSO,  Next: johab2ucs2 AUTHOR,  Prev: johab2ucs2 FILES,  Up: johab2ucs2

3.8.5 johab2ucs2 SEE ALSO
-------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), unibdf2hex(1), unibmp2hex(1), unicoverage(1),
unidup(1), unifont(5), unifont-viewer(1), unifontchojung(1),
unifontksx(1), unifontpic(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: johab2ucs2 AUTHOR,  Next: johab2ucs2 LICENSE,  Prev: johab2ucs2 SEE ALSO,  Up: johab2ucs2

3.8.6 johab2ucs2 AUTHOR
-----------------------

johab2ucs2 was written in 1998 by Jungshik Shin and given to Roman
Czyborra.  Paul Hardy made some modifications and bug fixes in 2008.


File: unifont.info,  Node: johab2ucs2 LICENSE,  Next: johab2ucs2 BUGS,  Prev: johab2ucs2 AUTHOR,  Up: johab2ucs2

3.8.7 johab2ucs2 LICENSE
------------------------

johab2ucs2 is Copyright (C) 1998 Jungshik Shin and Roman Czyborra, (C)
2008 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: johab2ucs2 BUGS,  Prev: johab2ucs2 LICENSE,  Up: johab2ucs2

3.8.8 johab2ucs2 BUGS
---------------------

No known bugs exist.


File: unifont.info,  Node: unibdf2hex,  Next: unibmp2hex,  Prev: johab2ucs2,  Up: Reference

3.9 unibdf2hex
==============

* Menu:

* unibdf2hex NAME::
* unibdf2hex SYNOPSIS::
* unibdf2hex DESCRIPTION::
* unibdf2hex FILES::
* unibdf2hex SEE ALSO::
* unibdf2hex AUTHOR::
* unibdf2hex LICENSE::
* unibdf2hex BUGS::


File: unifont.info,  Node: unibdf2hex NAME,  Next: unibdf2hex SYNOPSIS,  Up: unibdf2hex

3.9.1 unibdf2hex NAME
---------------------

unibdf2hex - Convert BDF font glyphs into Unifont .hex glyphs


File: unifont.info,  Node: unibdf2hex SYNOPSIS,  Next: unibdf2hex DESCRIPTION,  Prev: unibdf2hex NAME,  Up: unibdf2hex

3.9.2 unibdf2hex SYNOPSIS
-------------------------

unibdf2hex < input-font.bdf > output-font.hex


File: unifont.info,  Node: unibdf2hex DESCRIPTION,  Next: unibdf2hex FILES,  Prev: unibdf2hex SYNOPSIS,  Up: unibdf2hex

3.9.3 unibdf2hex DESCRIPTION
----------------------------

unibdf2hex reads a BDF font file, extracting selected code points and
printing them on stdout in Unifont .hex format.  This program was used
to extract CJK ideographs from the 16x16 version of Wen Quan Yi's BDF
font.  Currently the program is hard-coded to only extract those code
points that comprise the "wqy.hex" source font file used to build
"unifont.hex" but this source code could easily be modified.


File: unifont.info,  Node: unibdf2hex FILES,  Next: unibdf2hex SEE ALSO,  Prev: unibdf2hex DESCRIPTION,  Up: unibdf2hex

3.9.4 unibdf2hex FILES
----------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: unibdf2hex SEE ALSO,  Next: unibdf2hex AUTHOR,  Prev: unibdf2hex FILES,  Up: unibdf2hex

3.9.5 unibdf2hex SEE ALSO
-------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibmp2hex(1), unicoverage(1),
unidup(1), unifont(5), unifont-viewer(1), unifontchojung(1),
unifontksx(1), unifontpic(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unibdf2hex AUTHOR,  Next: unibdf2hex LICENSE,  Prev: unibdf2hex SEE ALSO,  Up: unibdf2hex

3.9.6 unibdf2hex AUTHOR
-----------------------

unibdf2hex was written by Paul Hardy.


File: unifont.info,  Node: unibdf2hex LICENSE,  Next: unibdf2hex BUGS,  Prev: unibdf2hex AUTHOR,  Up: unibdf2hex

3.9.7 unibdf2hex LICENSE
------------------------

unibdf2hex is Copyright (C) 2008 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unibdf2hex BUGS,  Prev: unibdf2hex LICENSE,  Up: unibdf2hex

3.9.8 unibdf2hex BUGS
---------------------

No known bugs exist.


File: unifont.info,  Node: unibmp2hex,  Next: unicoverage,  Prev: unibdf2hex,  Up: Reference

3.10 unibmp2hex
===============

* Menu:

* unibmp2hex NAME::
* unibmp2hex SYNOPSIS::
* unibmp2hex DESCRIPTION::
* unibmp2hex OPTIONS::
* unibmp2hex FILES::
* unibmp2hex SEE ALSO::
* unibmp2hex AUTHOR::
* unibmp2hex LICENSE::
* unibmp2hex BUGS::


File: unifont.info,  Node: unibmp2hex NAME,  Next: unibmp2hex SYNOPSIS,  Up: unibmp2hex

3.10.1 unibmp2hex NAME
----------------------

unibmp2hex - Bitmap graphics file to GNU Unifont .hex file converter


File: unifont.info,  Node: unibmp2hex SYNOPSIS,  Next: unibmp2hex DESCRIPTION,  Prev: unibmp2hex NAME,  Up: unibmp2hex

3.10.2 unibmp2hex SYNOPSIS
--------------------------

unibmp2hex [-phexpage] [-iinput_file.bmp] [-ooutput_file.hex] [-w]


File: unifont.info,  Node: unibmp2hex DESCRIPTION,  Next: unibmp2hex OPTIONS,  Prev: unibmp2hex SYNOPSIS,  Up: unibmp2hex

3.10.3 unibmp2hex DESCRIPTION
-----------------------------

unibmp2hex reads a bitmap produced by unihex2bmp before or after
editing, and converts it back into a Unifont .hex format file.  The
graphics file contains a block of 256 Unicode code points arranged in a
16 by 16 grid.  Each code point appears in a 32 by 32 pixel grid.
Characters are either 16 rows high by 8 columns, or 16 rows by 16
columns.


File: unifont.info,  Node: unibmp2hex OPTIONS,  Next: unibmp2hex FILES,  Prev: unibmp2hex DESCRIPTION,  Up: unibmp2hex

3.10.4 unibmp2hex OPTIONS
-------------------------

'-ppagenum'
     Specify that the code points will be assigned to the 256 block
     space pagenum in the .hex file.  If not specified, unibmp2hex will
     determine the appropriate block by reading the row and column
     headers.  Note that "page" is not a standard Unicode term.  It
     refers to an output bitmap graphics page of 16 by 16 code points.
     If pagenum is greater than FF, the block resides above the Unicode
     Basic Multilingual Plane.  In that event, the .hex file will
     contain eight digit hexadecimal code points rather than the Unifont
     standard of four hexadecimal code points.

'-i'
     Specify the input file.  The default is STDIN.

'-o'
     Specify the output file.  The default is STDOUT.

'-w'
     Force all output .hex glyphs to be 16 pixels wide rather than dual
     width (8 or 16 pixels).

     Sample usage:

          unibmp2hex -imy_input_file.bmp -omy_output_file.hex


File: unifont.info,  Node: unibmp2hex FILES,  Next: unibmp2hex SEE ALSO,  Prev: unibmp2hex OPTIONS,  Up: unibmp2hex

3.10.5 unibmp2hex FILES
-----------------------

*.bmp or *.wbmp graphics files


File: unifont.info,  Node: unibmp2hex SEE ALSO,  Next: unibmp2hex AUTHOR,  Prev: unibmp2hex FILES,  Up: unibmp2hex

3.10.6 unibmp2hex SEE ALSO
--------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unicoverage(1),
unidup(1), unifont(5), unifont-viewer(1), unifontchojung(1),
unifontksx(1), unifontpic(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unibmp2hex AUTHOR,  Next: unibmp2hex LICENSE,  Prev: unibmp2hex SEE ALSO,  Up: unibmp2hex

3.10.7 unibmp2hex AUTHOR
------------------------

unibmp2hex was written by Paul Hardy.


File: unifont.info,  Node: unibmp2hex LICENSE,  Next: unibmp2hex BUGS,  Prev: unibmp2hex AUTHOR,  Up: unibmp2hex

3.10.8 unibmp2hex LICENSE
-------------------------

unibmp2hex is Copyright (C) 2007, 2008 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unibmp2hex BUGS,  Prev: unibmp2hex LICENSE,  Up: unibmp2hex

3.10.9 unibmp2hex BUGS
----------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its input files.  If they're not in the
format of the original bitmapped output from unihex2bmp, all bets are
off.

If the output file is for a "page" containing space code points and the
bitmap file squares for those code points are not empty, unibmp2hex
preserves the graphics as they are drawn.


File: unifont.info,  Node: unicoverage,  Next: unidup,  Prev: unibmp2hex,  Up: Reference

3.11 unicoverage
================

* Menu:

* unicoverage NAME::
* unicoverage SYNOPSIS::
* unicoverage DESCRIPTION::
* unicoverage OPTIONS::
* unicoverage FILES::
* unicoverage SEE ALSO::
* unicoverage AUTHOR::
* unicoverage LICENSE::
* unicoverage BUGS::


File: unifont.info,  Node: unicoverage NAME,  Next: unicoverage SYNOPSIS,  Up: unicoverage

3.11.1 unicoverage NAME
-----------------------

unicoverage - Print coverage of each Unicode BMP Script


File: unifont.info,  Node: unicoverage SYNOPSIS,  Next: unicoverage DESCRIPTION,  Prev: unicoverage NAME,  Up: unicoverage

3.11.2 unicoverage SYNOPSIS
---------------------------

unicoverage [-iinput-file] [-ooutput-file]


File: unifont.info,  Node: unicoverage DESCRIPTION,  Next: unicoverage OPTIONS,  Prev: unicoverage SYNOPSIS,  Up: unicoverage

3.11.3 unicoverage DESCRIPTION
------------------------------

unicoverage reads a GNU Unifont .hex font and uses data in coverage.dat
(which must reside in the current directory).  The output is the percent
coverage of each script in the Unicode Basic Multilingual Plane.


File: unifont.info,  Node: unicoverage OPTIONS,  Next: unicoverage FILES,  Prev: unicoverage DESCRIPTION,  Up: unicoverage

3.11.4 unicoverage OPTIONS
--------------------------

'-i'
     Specify the input file.  The default is STDIN.

'-o'
     Specify the output file.  The default is STDOUT. Sample usage:

          unicoverage < unifont.hex >coverage.txt


File: unifont.info,  Node: unicoverage FILES,  Next: unicoverage SEE ALSO,  Prev: unicoverage OPTIONS,  Up: unicoverage

3.11.5 unicoverage FILES
------------------------

coverage.dat, *.hex GNU Unifont files.


File: unifont.info,  Node: unicoverage SEE ALSO,  Next: unicoverage AUTHOR,  Prev: unicoverage FILES,  Up: unicoverage

3.11.6 unicoverage SEE ALSO
---------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unidup(1), unifont(5), unifont-viewer(1), unifontchojung(1),
unifontksx(1), unifontpic(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unicoverage AUTHOR,  Next: unicoverage LICENSE,  Prev: unicoverage SEE ALSO,  Up: unicoverage

3.11.7 unicoverage AUTHOR
-------------------------

unicoverage was written by Paul Hardy.


File: unifont.info,  Node: unicoverage LICENSE,  Next: unicoverage BUGS,  Prev: unicoverage AUTHOR,  Up: unicoverage

3.11.8 unicoverage LICENSE
--------------------------

unicoverage is Copyright (C) 2007, 2008 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unicoverage BUGS,  Prev: unicoverage LICENSE,  Up: unicoverage

3.11.9 unicoverage BUGS
-----------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its input files.


File: unifont.info,  Node: unidup,  Next: unifont-viewer,  Prev: unicoverage,  Up: Reference

3.12 unidup
===========

* Menu:

* unidup NAME::
* unidup SYNOPSIS::
* unidup DESCRIPTION::
* unidup FILES::
* unidup SEE ALSO::
* unidup AUTHOR::
* unidup LICENSE::
* unidup BUGS::


File: unifont.info,  Node: unidup NAME,  Next: unidup SYNOPSIS,  Up: unidup

3.12.1 unidup NAME
------------------

unidup - Scan through a sorted .hex file and report duplicate code
points


File: unifont.info,  Node: unidup SYNOPSIS,  Next: unidup DESCRIPTION,  Prev: unidup NAME,  Up: unidup

3.12.2 unidup SYNOPSIS
----------------------

unidup [ input-font.hex ]


File: unifont.info,  Node: unidup DESCRIPTION,  Next: unidup FILES,  Prev: unidup SYNOPSIS,  Up: unidup

3.12.3 unidup DESCRIPTION
-------------------------

unidup reads a sorted GNU Unifont .hex file (sorted with the Unix sort
utility) and prints notification of any duplicate code points on stdout.
The input file can be specified on the command line.  If no file is
specified, input will be read from STDIN until end of file.


File: unifont.info,  Node: unidup FILES,  Next: unidup SEE ALSO,  Prev: unidup DESCRIPTION,  Up: unidup

3.12.4 unidup FILES
-------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: unidup SEE ALSO,  Next: unidup AUTHOR,  Prev: unidup FILES,  Up: unidup

3.12.5 unidup SEE ALSO
----------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unifont(5), unifont-viewer(1), unifontchojung(1),
unifontksx(1), unifontpic(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unidup AUTHOR,  Next: unidup LICENSE,  Prev: unidup SEE ALSO,  Up: unidup

3.12.6 unidup AUTHOR
--------------------

unidup was written by Paul Hardy.


File: unifont.info,  Node: unidup LICENSE,  Next: unidup BUGS,  Prev: unidup AUTHOR,  Up: unidup

3.12.7 unidup LICENSE
---------------------

unidup is Copyright (C) 2007, 2013 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unidup BUGS,  Prev: unidup LICENSE,  Up: unidup

3.12.8 unidup BUGS
------------------

No known bugs exist.


File: unifont.info,  Node: unifont-viewer,  Next: unifontchojung,  Prev: unidup,  Up: Reference

3.13 unifont-viewer
===================

* Menu:

* unifont-viewer NAME::
* unifont-viewer SYNOPSIS::
* unifont-viewer DESCRIPTION::
* unifont-viewer FILES::
* unifont-viewer SEE ALSO::
* unifont-viewer AUTHOR::
* unifont-viewer LICENSE::
* unifont-viewer BUGS::


File: unifont.info,  Node: unifont-viewer NAME,  Next: unifont-viewer SYNOPSIS,  Up: unifont-viewer

3.13.1 unifont-viewer NAME
--------------------------

unifont-viewer - View a .hex font file with a graphical user interface


File: unifont.info,  Node: unifont-viewer SYNOPSIS,  Next: unifont-viewer DESCRIPTION,  Prev: unifont-viewer NAME,  Up: unifont-viewer

3.13.2 unifont-viewer SYNOPSIS
------------------------------

unifont-viewer &


File: unifont.info,  Node: unifont-viewer DESCRIPTION,  Next: unifont-viewer FILES,  Prev: unifont-viewer SYNOPSIS,  Up: unifont-viewer

3.13.3 unifont-viewer DESCRIPTION
---------------------------------

unifont-viewer reads a GNU Unifont .hex file and displays glyphs in
blocks of 16 by 16, 256 glyphs per screen with a graphical user
interface.  The .hex file is selected by opening it with the File > Open
menu item or by typing Control-O. After loading a file, a list of
"pages" of 256 glyphs will appear in the left-hand column of the window.
The first such page of glyphs in the file will appear in the main
window.

unifont-viewer supports glyph heights of 16, 24, and 32 pixels.  The
height of a .hex font file is selected under the File menu.  The default
selection is Glyph Height 16.

Exit unifont-viewer by selecting File > Exit or by typing Control-X.


File: unifont.info,  Node: unifont-viewer FILES,  Next: unifont-viewer SEE ALSO,  Prev: unifont-viewer DESCRIPTION,  Up: unifont-viewer

3.13.4 unifont-viewer FILES
---------------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: unifont-viewer SEE ALSO,  Next: unifont-viewer AUTHOR,  Prev: unifont-viewer FILES,  Up: unifont-viewer

3.13.5 unifont-viewer SEE ALSO
------------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifontchojung(1), unifontksx(1),
unifontpic(1), unigencircles(1), unigenwidth(1), unihex2bmp(1),
unihex2png(1), unihexfill(1), unihexgen(1), unipagecount(1),
unipng2hex(1)


File: unifont.info,  Node: unifont-viewer AUTHOR,  Next: unifont-viewer LICENSE,  Prev: unifont-viewer SEE ALSO,  Up: unifont-viewer

3.13.6 unifont-viewer AUTHOR
----------------------------

unifont-viewer was written by Andrew Miller.


File: unifont.info,  Node: unifont-viewer LICENSE,  Next: unifont-viewer BUGS,  Prev: unifont-viewer AUTHOR,  Up: unifont-viewer

3.13.7 unifont-viewer LICENSE
-----------------------------

unifont-viewer is Copyright (C) 2014 Andrew Miller.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unifont-viewer BUGS,  Prev: unifont-viewer LICENSE,  Up: unifont-viewer

3.13.8 unifont-viewer BUGS
--------------------------

No known bugs exist.


File: unifont.info,  Node: unifontchojung,  Next: unifontksx,  Prev: unifont-viewer,  Up: Reference

3.14 unifontchojung
===================

* Menu:

* unifontchojung NAME::
* unifontchojung SYNOPSIS::
* unifontchojung DESCRIPTION::
* unifontchojung FILES::
* unifontchojung SEE ALSO::
* unifontchojung AUTHOR::
* unifontchojung LICENSE::
* unifontchojung BUGS::


File: unifont.info,  Node: unifontchojung NAME,  Next: unifontchojung SYNOPSIS,  Up: unifontchojung

3.14.1 unifontchojung NAME
--------------------------

unifontchojung - Extract Hangul syllables that have no final consonant


File: unifont.info,  Node: unifontchojung SYNOPSIS,  Next: unifontchojung DESCRIPTION,  Prev: unifontchojung NAME,  Up: unifontchojung

3.14.2 unifontchojung SYNOPSIS
------------------------------

unifontchojung < input-font.hex > output-font.hex


File: unifont.info,  Node: unifontchojung DESCRIPTION,  Next: unifontchojung FILES,  Prev: unifontchojung SYNOPSIS,  Up: unifontchojung

3.14.3 unifontchojung DESCRIPTION
---------------------------------

unifontchojung reads a Unifont-format .hex font file from STDIN and
writes a Unifont .hex file containing a subset to STDOUT. The subset
that is output only contains syllables that contain an initial consonant
(chojung) plus middle vowel (jungseong), with no final consonant
(jongseong).  This lets a font designer focus on this subset during font
creation.


File: unifont.info,  Node: unifontchojung FILES,  Next: unifontchojung SEE ALSO,  Prev: unifontchojung DESCRIPTION,  Up: unifontchojung

3.14.4 unifontchojung FILES
---------------------------

*.bdf font files


File: unifont.info,  Node: unifontchojung SEE ALSO,  Next: unifontchojung AUTHOR,  Prev: unifontchojung FILES,  Up: unifontchojung

3.14.5 unifontchojung SEE ALSO
------------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1), unifontksx(1),
unifontpic(1), unigencircles(1), unigenwidth(1), unihex2bmp(1),
unihex2png(1), unihexfill(1), unihexgen(1), unipagecount(1),
unipng2hex(1)


File: unifont.info,  Node: unifontchojung AUTHOR,  Next: unifontchojung LICENSE,  Prev: unifontchojung SEE ALSO,  Up: unifontchojung

3.14.6 unifontchojung AUTHOR
----------------------------

unifontchojung was written by Paul Hardy.


File: unifont.info,  Node: unifontchojung LICENSE,  Next: unifontchojung BUGS,  Prev: unifontchojung AUTHOR,  Up: unifontchojung

3.14.7 unifontchojung LICENSE
-----------------------------

unifontchojung is Copyright (C) 2012 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unifontchojung BUGS,  Prev: unifontchojung LICENSE,  Up: unifontchojung

3.14.8 unifontchojung BUGS
--------------------------

No known bugs exist.


File: unifont.info,  Node: unifontksx,  Next: unifontpic,  Prev: unifontchojung,  Up: Reference

3.15 unifontksx
===============

* Menu:

* unifontksx NAME::
* unifontksx SYNOPSIS::
* unifontksx DESCRIPTION::
* unifontksx FILES::
* unifontksx SEE ALSO::
* unifontksx AUTHOR::
* unifontksx LICENSE::
* unifontksx BUGS::


File: unifont.info,  Node: unifontksx NAME,  Next: unifontksx SYNOPSIS,  Up: unifontksx

3.15.1 unifontksx NAME
----------------------

unifontksx - Extract Hangul syllables that comprise KS X 1001:1992


File: unifont.info,  Node: unifontksx SYNOPSIS,  Next: unifontksx DESCRIPTION,  Prev: unifontksx NAME,  Up: unifontksx

3.15.2 unifontksx SYNOPSIS
--------------------------

unifontksx < input-font.hex > output-font.hex


File: unifont.info,  Node: unifontksx DESCRIPTION,  Next: unifontksx FILES,  Prev: unifontksx SYNOPSIS,  Up: unifontksx

3.15.3 unifontksx DESCRIPTION
-----------------------------

unifontksx reads a Unifont-format .hex font file from STDIN and writes a
Unifont .hex file containing a subset to STDOUT. The subset that is
output only contains the 2,350 syllables that comprise Korean Standard
KS X 1001:1992.  These are extracted from the Unicode Hangul Syllables
block, U+AC00..U+D7A3.  This lets a font designer focus on those
syllables that are most common in modern Hangul usage during font
development.


File: unifont.info,  Node: unifontksx FILES,  Next: unifontksx SEE ALSO,  Prev: unifontksx DESCRIPTION,  Up: unifontksx

3.15.4 unifontksx FILES
-----------------------

*.bdf font files


File: unifont.info,  Node: unifontksx SEE ALSO,  Next: unifontksx AUTHOR,  Prev: unifontksx FILES,  Up: unifontksx

3.15.5 unifontksx SEE ALSO
--------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontpic(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unifontksx AUTHOR,  Next: unifontksx LICENSE,  Prev: unifontksx SEE ALSO,  Up: unifontksx

3.15.6 unifontksx AUTHOR
------------------------

unifontksx was written by Paul Hardy.


File: unifont.info,  Node: unifontksx LICENSE,  Next: unifontksx BUGS,  Prev: unifontksx AUTHOR,  Up: unifontksx

3.15.7 unifontksx LICENSE
-------------------------

unifontksx is Copyright (C) 2012 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unifontksx BUGS,  Prev: unifontksx LICENSE,  Up: unifontksx

3.15.8 unifontksx BUGS
----------------------

No known bugs exist.


File: unifont.info,  Node: unifontpic,  Next: unigencircles,  Prev: unifontksx,  Up: Reference

3.16 unifontpic
===============

* Menu:

* unifontpic NAME::
* unifontpic SYNOPSIS::
* unifontpic DESCRIPTION::
* unifontpic OPTIONS::
* unifontpic EXAMPLES::
* unifontpic FILES::
* unifontpic SEE ALSO::
* unifontpic AUTHOR::
* unifontpic LICENSE::
* unifontpic BUGS::


File: unifont.info,  Node: unifontpic NAME,  Next: unifontpic SYNOPSIS,  Up: unifontpic

3.16.1 unifontpic NAME
----------------------

unifontpic - Convert GNU Unifont .hex input to a bitmap image of the
whole font


File: unifont.info,  Node: unifontpic SYNOPSIS,  Next: unifontpic DESCRIPTION,  Prev: unifontpic NAME,  Up: unifontpic

3.16.2 unifontpic SYNOPSIS
--------------------------

unifontpic [-dnnn][-l][-t] < input-font.hex > output-font.bmp


File: unifont.info,  Node: unifontpic DESCRIPTION,  Next: unifontpic OPTIONS,  Prev: unifontpic SYNOPSIS,  Up: unifontpic

3.16.3 unifontpic DESCRIPTION
-----------------------------

unifontpic reads a GNU Unifont .hex file from STDIN and writes a two
dimensional rendering for each glyph to STDOUT. The output displays the
entire Unicode Basic Multilingual Plane (BMP) as one large graphic
image, showing a grid of 256 glyphs by 256 glyphs as the default, or (at
your option) 16 glyphs across by 4,096 glyphs down.

Input can be one or more files in Unifont .hex format.  They don't have
to be sorted, as unifontpic will populate the entire glyph array of
65,536 code points before writing its output.  The input glyph code
points should all be unique, as feeding in duplicate code points will
produce unpredictable results.  Use unidup (1) on a sorted input of .hex
files to guarantee no code point duplication.


File: unifont.info,  Node: unifontpic OPTIONS,  Next: unifontpic EXAMPLES,  Prev: unifontpic DESCRIPTION,  Up: unifontpic

3.16.4 unifontpic OPTIONS
-------------------------

'-dnnn'
     Specify a Dots per Inch (DPI) resolution of nnn.  For example,
     specifying -d120 will encode the bitmap graphics file output as
     having a resolution of 120 DPI.

'-l'
     Produce a long chart, 16 glyphs wide by 4,096 glyphs tall.  The
     default is a wide chart, 256 glyphs wide by 256 glyphs tall.

'-t'
     Use tiny numbers for the row and column code point labels.  Tiny
     numbers are on a 4 by 5 pixel grid.  Only tiny code point labels
     appear on the long chart variant; this option only has effect for
     wide charts (the default, of 256 by 256 glyphs).  If this option is
     not specified for the default 256-by-256 grid, row and column code
     point labels are taken from Unifont's glyphs for '0' to '9' and 'A'
     to 'F'.


File: unifont.info,  Node: unifontpic EXAMPLES,  Next: unifontpic FILES,  Prev: unifontpic OPTIONS,  Up: unifontpic

3.16.5 unifontpic EXAMPLES
--------------------------

Sample usage:

     cat *.hex | unifontpic -d120 > unifontpic.bmp

To generate a bitmap that shows combining circles, from the font/
subdirectory:

     sort plane00/*.hex | unigencircles ttfsrc/combining.txt |
     unifontpic -d120 >unifontpic.bmp


File: unifont.info,  Node: unifontpic FILES,  Next: unifontpic SEE ALSO,  Prev: unifontpic EXAMPLES,  Up: unifontpic

3.16.6 unifontpic FILES
-----------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: unifontpic SEE ALSO,  Next: unifontpic AUTHOR,  Prev: unifontpic FILES,  Up: unifontpic

3.16.7 unifontpic SEE ALSO
--------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unigencircles(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unifontpic AUTHOR,  Next: unifontpic LICENSE,  Prev: unifontpic SEE ALSO,  Up: unifontpic

3.16.8 unifontpic AUTHOR
------------------------

unifontpic was written by Paul Hardy.


File: unifont.info,  Node: unifontpic LICENSE,  Next: unifontpic BUGS,  Prev: unifontpic AUTHOR,  Up: unifontpic

3.16.9 unifontpic LICENSE
-------------------------

unifontpic is Copyright (C) 2013 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unifontpic BUGS,  Prev: unifontpic LICENSE,  Up: unifontpic

3.16.10 unifontpic BUGS
-----------------------

No known bugs exist.


File: unifont.info,  Node: unigencircles,  Next: unigenwidth,  Prev: unifontpic,  Up: Reference

3.17 unigencircles
==================

* Menu:

* unigencircles NAME::
* unigencircles SYNOPSIS::
* unigencircles DESCRIPTION::
* unigencircles EXAMPLE::
* unigencircles FILES::
* unigencircles SEE ALSO::
* unigencircles AUTHOR::
* unigencircles LICENSE::
* unigencircles BUGS::


File: unifont.info,  Node: unigencircles NAME,  Next: unigencircles SYNOPSIS,  Up: unigencircles

3.17.1 unigencircles NAME
-------------------------

unigencircles - Add dashed combining circles to a unifont.hex file


File: unifont.info,  Node: unigencircles SYNOPSIS,  Next: unigencircles DESCRIPTION,  Prev: unigencircles NAME,  Up: unigencircles

3.17.2 unigencircles SYNOPSIS
-----------------------------

unigencircles combining.txt nonprinting.hex < unifont.hex >
unifont-circles.hex


File: unifont.info,  Node: unigencircles DESCRIPTION,  Next: unigencircles EXAMPLE,  Prev: unigencircles SYNOPSIS,  Up: unigencircles

3.17.3 unigencircles DESCRIPTION
--------------------------------

unigencircles reads a unifont.hex file from STDIN, adds dashed combining
circles to the hex strings for code points listed in "combining.txt" but
not listed in "nonprinting.hex", and writes the revised set of glyphs in
unifont.hex format to STDOUT. The resulting combining character glyphs
show the dashed combining circles that appear in The Unicode Standard
code charts.

For each code point listed in the "combining.txt" file but not listed in
the "nonprinting.hex" file, unigencircles will superimpose a
single-width dashed circle in glyphs that are single-width (i.e., their
hex glyph strings are 32 characters long) and will superimpose a
double-width dashed circle in glyphs that are double-width (i.e., their
hex glyph strings are 64 characters long).


File: unifont.info,  Node: unigencircles EXAMPLE,  Next: unigencircles FILES,  Prev: unigencircles DESCRIPTION,  Up: unigencircles

3.17.4 unigencircles EXAMPLE
----------------------------

     unigencircles combining.txt nonprinting.hex < unifont.hex >
     unifont-circles.hex


File: unifont.info,  Node: unigencircles FILES,  Next: unigencircles SEE ALSO,  Prev: unigencircles EXAMPLE,  Up: unigencircles

3.17.5 unigencircles FILES
--------------------------

*.hex files for Unifont glyph data

font/ttfsrc/combining.txt for combining code points

font/plane00/nonprinting.hex for non-printing code points


File: unifont.info,  Node: unigencircles SEE ALSO,  Next: unigencircles AUTHOR,  Prev: unigencircles FILES,  Up: unigencircles

3.17.6 unigencircles SEE ALSO
-----------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigenwidth(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unigencircles AUTHOR,  Next: unigencircles LICENSE,  Prev: unigencircles SEE ALSO,  Up: unigencircles

3.17.7 unigencircles AUTHOR
---------------------------

unigencircles was written by Paul Hardy.


File: unifont.info,  Node: unigencircles LICENSE,  Next: unigencircles BUGS,  Prev: unigencircles AUTHOR,  Up: unigencircles

3.17.8 unigencircles LICENSE
----------------------------

unigencircles is Copyright (C) 2013 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unigencircles BUGS,  Prev: unigencircles LICENSE,  Up: unigencircles

3.17.9 unigencircles BUGS
-------------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its input files.


File: unifont.info,  Node: unigenwidth,  Next: unihex2bmp,  Prev: unigencircles,  Up: Reference

3.18 unigenwidth
================

* Menu:

* unigenwidth NAME::
* unigenwidth SYNOPSIS::
* unigenwidth DESCRIPTION::
* unigenwidth EXAMPLE::
* unigenwidth FILES::
* unigenwidth SEE ALSO::
* unigenwidth AUTHOR::
* unigenwidth LICENSE::
* unigenwidth BUGS::


File: unifont.info,  Node: unigenwidth NAME,  Next: unigenwidth SYNOPSIS,  Up: unigenwidth

3.18.1 unigenwidth NAME
-----------------------

unigenwidth - Generate C code for POSIX wcwidth and wcswidth functions


File: unifont.info,  Node: unigenwidth SYNOPSIS,  Next: unigenwidth DESCRIPTION,  Prev: unigenwidth NAME,  Up: unigenwidth

3.18.2 unigenwidth SYNOPSIS
---------------------------

unigenwidth unifont.hex combining.txt


File: unifont.info,  Node: unigenwidth DESCRIPTION,  Next: unigenwidth EXAMPLE,  Prev: unigenwidth SYNOPSIS,  Up: unigenwidth

3.18.3 unigenwidth DESCRIPTION
------------------------------

unigenwidth reads a collection of glyphs in Unifont's .hex format, then
reads a list of combining characters as a hexadecimal list.  From these
two files, it produces C code to implement the POSIX wcwidth(3) and
wcswidth(3) functions.  The format of these definitions is based upon
POSIX 1003.1-2008 System Interfaces, pages 2251 and 2241, respectively.


File: unifont.info,  Node: unigenwidth EXAMPLE,  Next: unigenwidth FILES,  Prev: unigenwidth DESCRIPTION,  Up: unigenwidth

3.18.4 unigenwidth EXAMPLE
--------------------------

Sample usage:

     unigenwidth unifont.hex combining.txt > wccode.c


File: unifont.info,  Node: unigenwidth FILES,  Next: unigenwidth SEE ALSO,  Prev: unigenwidth EXAMPLE,  Up: unigenwidth

3.18.5 unigenwidth FILES
------------------------

*.hex files for Unifont glyph data; combining.txt for combining code
points.


File: unifont.info,  Node: unigenwidth SEE ALSO,  Next: unigenwidth AUTHOR,  Prev: unigenwidth FILES,  Up: unigenwidth

3.18.6 unigenwidth SEE ALSO
---------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unihex2bmp(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unigenwidth AUTHOR,  Next: unigenwidth LICENSE,  Prev: unigenwidth SEE ALSO,  Up: unigenwidth

3.18.7 unigenwidth AUTHOR
-------------------------

unigenwidth was written by Paul Hardy.


File: unifont.info,  Node: unigenwidth LICENSE,  Next: unigenwidth BUGS,  Prev: unigenwidth AUTHOR,  Up: unigenwidth

3.18.8 unigenwidth LICENSE
--------------------------

unigenwidth is Copyright (C) 2013 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unigenwidth BUGS,  Prev: unigenwidth LICENSE,  Up: unigenwidth

3.18.9 unigenwidth BUGS
-----------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its input files.


File: unifont.info,  Node: unihex2bmp,  Next: unihex2png,  Prev: unigenwidth,  Up: Reference

3.19 unihex2bmp
===============

* Menu:

* unihex2bmp NAME::
* unihex2bmp SYNOPSIS::
* unihex2bmp DESCRIPTION::
* unihex2bmp OPTIONS::
* unihex2bmp FILES::
* unihex2bmp SEE ALSO::
* unihex2bmp AUTHOR::
* unihex2bmp LICENSE::
* unihex2bmp BUGS::


File: unifont.info,  Node: unihex2bmp NAME,  Next: unihex2bmp SYNOPSIS,  Up: unihex2bmp

3.19.1 unihex2bmp NAME
----------------------

unihex2bmp - GNU Unifont .hex file to bitmap graphics file converter


File: unifont.info,  Node: unihex2bmp SYNOPSIS,  Next: unihex2bmp DESCRIPTION,  Prev: unihex2bmp NAME,  Up: unihex2bmp

3.19.2 unihex2bmp SYNOPSIS
--------------------------

unihex2bmp [-phexpage] [-iinput_file.hex] [-ooutput_file.bmp] [-f] [-w]


File: unifont.info,  Node: unihex2bmp DESCRIPTION,  Next: unihex2bmp OPTIONS,  Prev: unihex2bmp SYNOPSIS,  Up: unihex2bmp

3.19.3 unihex2bmp DESCRIPTION
-----------------------------

unihex2bmp reads a GNU Unifont .hex file Unicode page of 256 code points
and converts the page into a Microsoft Windows Bitmap (.bmp) or Wireless
Bitmap (.wbmp) file.  The bitmap file displays the glyphs of a Unicode
block of 256 code points in a 32 by 32 pixel grid.  The glyphs
themselves must be 16 rows high, and either 8 columns or 16 columns
wide.  The default page is 0; that is, the range U+0000 through U+00FF.

The bitmap can be printed.  It can also be edited with a bitmap editor.
An edited bitmap can then be re-converted into a GNU Unifont .hex file
with the unibmp2hex command.


File: unifont.info,  Node: unihex2bmp OPTIONS,  Next: unihex2bmp FILES,  Prev: unihex2bmp DESCRIPTION,  Up: unihex2bmp

3.19.4 unihex2bmp OPTIONS
-------------------------

'-ppagenum'
     Extract page pagenum from the .hex file.  The default is Page 0
     (Unicode range U+0000 through U+00FF). Note that "page" is not a
     standard Unicode term.  It refers to an output bitmap graphics page
     of 16 by 16 code points.

'-i'
     Specify the input file.  The default is STDIN.

'-o'
     Specify the output file.  The default is STDOUT.

'-f'
     "Flip" (transpose) the grid so it matches the Unicode standard
     order.

'-w'
     Produce a Wireless Bitmap format file instead of a Microsoft
     Windows Bitmap file.

     Sample usage:

          unihex2bmp -imy_input_file.hex -omy_output_file.bmp


File: unifont.info,  Node: unihex2bmp FILES,  Next: unihex2bmp SEE ALSO,  Prev: unihex2bmp OPTIONS,  Up: unihex2bmp

3.19.5 unihex2bmp FILES
-----------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: unihex2bmp SEE ALSO,  Next: unihex2bmp AUTHOR,  Prev: unihex2bmp FILES,  Up: unihex2bmp

3.19.6 unihex2bmp SEE ALSO
--------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2png(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unihex2bmp AUTHOR,  Next: unihex2bmp LICENSE,  Prev: unihex2bmp SEE ALSO,  Up: unihex2bmp

3.19.7 unihex2bmp AUTHOR
------------------------

unihex2bmp was written by Paul Hardy.


File: unifont.info,  Node: unihex2bmp LICENSE,  Next: unihex2bmp BUGS,  Prev: unihex2bmp AUTHOR,  Up: unihex2bmp

3.19.8 unihex2bmp LICENSE
-------------------------

unihex2bmp is Copyright (C) 2007 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unihex2bmp BUGS,  Prev: unihex2bmp LICENSE,  Up: unihex2bmp

3.19.9 unihex2bmp BUGS
----------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its input files.  If they're not in the
format of the original GNU Unifont .hex file, all bets are off.  Lines
can be terminated either with line feed, or carriage return plus line
feed.


File: unifont.info,  Node: unihex2png,  Next: unihexfill,  Prev: unihex2bmp,  Up: Reference

3.20 unihex2png
===============

* Menu:

* unihex2png NAME::
* unihex2png SYNOPSIS::
* unihex2png DESCRIPTION::
* unihex2png OPTIONS::
* unihex2png EXAMPLE::
* unihex2png FILES::
* unihex2png SEE ALSO::
* unihex2png AUTHOR::
* unihex2png LICENSE::
* unihex2png BUGS::


File: unifont.info,  Node: unihex2png NAME,  Next: unihex2png SYNOPSIS,  Up: unihex2png

3.20.1 unihex2png NAME
----------------------

unihex2png - GNU Unifont .hex file to Portable Network Graphics
converter


File: unifont.info,  Node: unihex2png SYNOPSIS,  Next: unihex2png DESCRIPTION,  Prev: unihex2png NAME,  Up: unihex2png

3.20.2 unihex2png SYNOPSIS
--------------------------

unihex2png [-i input_file.hex ] -o output_file.png [-p pagenum ] [-r
rows ]


File: unifont.info,  Node: unihex2png DESCRIPTION,  Next: unihex2png OPTIONS,  Prev: unihex2png SYNOPSIS,  Up: unihex2png

3.20.3 unihex2png DESCRIPTION
-----------------------------

unihex2png reads a page of 256 Unicode code points from a GNU Unifont
.hex file and converts the page into a Portable Network Graphics (PNG)
file.  The graphics file displays the glyphs of a Unicode block of 256
code points in a 32 by 32 pixel grid, or in a 40 by 40 pixel grid if "-r
32" is specified.  The glyphs themselves can be either 16, 24, or 32
pixels tall depending on the "-r" parameter.  They can be 8, 16, 24, or
32 pixels wide (widths of 32 are only supported if "-r 32" is
specified).  The default page is 0; that is, the range U+0000 through
U+00FF, inclusive.

The PNG file can be printed.  It can also be edited with a graphics
editor.  An edited PNG file can then be re-converted into a GNU Unifont
.hex file with the unipng2hex command.


File: unifont.info,  Node: unihex2png OPTIONS,  Next: unihex2png EXAMPLE,  Prev: unihex2png DESCRIPTION,  Up: unihex2png

3.20.4 unihex2png OPTIONS
-------------------------

'-i'
     Specify the input file.  If not omitted, a Unifont .hex file is
     read from STDIN.

'-o'
     Specify the output file.

'-p pagenum'
     Extract page pagenum from the .hex file.  The default is Page 0
     (Unicode range U+0000 through U+00FF). Note that "page" is not a
     standard Unicode term.  It refers to an output bitmap graphics page
     of 16 by 16 code points.

'-r rows'
     Specify the rows of pixels in the output glyphs.  Valid values are
     16, 24, and 32.  The default is 16 pixel rows tall.

'-h'
     Print a help message of options and exit.


File: unifont.info,  Node: unihex2png EXAMPLE,  Next: unihex2png FILES,  Prev: unihex2png OPTIONS,  Up: unihex2png

3.20.5 unihex2png EXAMPLE
-------------------------

Sample usage:

     unihex2png -i my_input_file.hex -o my_output_file.png


File: unifont.info,  Node: unihex2png FILES,  Next: unihex2png SEE ALSO,  Prev: unihex2png EXAMPLE,  Up: unihex2png

3.20.6 unihex2png FILES
-----------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: unihex2png SEE ALSO,  Next: unihex2png AUTHOR,  Prev: unihex2png FILES,  Up: unihex2png

3.20.7 unihex2png SEE ALSO
--------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihexfill(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unihex2png AUTHOR,  Next: unihex2png LICENSE,  Prev: unihex2png SEE ALSO,  Up: unihex2png

3.20.8 unihex2png AUTHOR
------------------------

unihex2png was written by Andrew Miller, starting by converting Paul
Hardy's unihex2bmp C program to Perl.


File: unifont.info,  Node: unihex2png LICENSE,  Next: unihex2png BUGS,  Prev: unihex2png AUTHOR,  Up: unihex2png

3.20.9 unihex2png LICENSE
-------------------------

unihex2png is Copyright (C) 2007 Paul Hardy, (C) 2013 Andrew Miller.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unihex2png BUGS,  Prev: unihex2png LICENSE,  Up: unihex2png

3.20.10 unihex2png BUGS
-----------------------

No known real bugs exist, but the optional pixel rows parameter is not
yet supported by all other Unifont utilities.  Use of glyphs taller than
the default of 16 pixels is considered experimental.  Currently
unihex2png, unipng2hex, hexdraw, and hex2bdf tentatively support glyphs
that are 16, 24, and 32 pixels tall.

Also, there is no extensive error checking on input files.  If they're
not in the format of the original GNU Unifont .hex file, all bets are
off.  Lines can be terminated either with line feed, or carriage return
plus line feed.


File: unifont.info,  Node: unihexfill,  Next: unihexgen,  Prev: unihex2png,  Up: Reference

3.21 unihexfill
===============

* Menu:

* unihexfill NAME::
* unihexfill SYNOPSIS::
* unihexfill DESCRIPTION::
* unihexfill OPTIONS::
* unihexfill FILES::
* unihexfill EXAMPLE::
* unihexfill SEE ALSO::
* unihexfill AUTHOR::
* unihexfill LICENSE::
* unihexfill BUGS::


File: unifont.info,  Node: unihexfill NAME,  Next: unihexfill SYNOPSIS,  Up: unihexfill

3.21.1 unihexfill NAME
----------------------

unihexfill - Generate range of Unifont 4- or 6-digit hexadecimal glyphs


File: unifont.info,  Node: unihexfill SYNOPSIS,  Next: unihexfill DESCRIPTION,  Prev: unihexfill NAME,  Up: unihexfill

3.21.2 unihexfill SYNOPSIS
--------------------------

unihexfill < unassigned-ranges.txt > filler-glyphs.hex


File: unifont.info,  Node: unihexfill DESCRIPTION,  Next: unihexfill OPTIONS,  Prev: unihexfill SYNOPSIS,  Up: unihexfill

3.21.3 unihexfill DESCRIPTION
-----------------------------

unihexfill is a shell script that reads a list of code point ranges from
STDIN and produces filler glyphs of 4- or 6-digit code points on STDOUT.
The format of the input file is a combination of comment lines, single
code points on a line, and start/stop pairs of code points on a line
separated by a space.  Comment lines start with a semicolon (';') by
convention.  Start and stop code points are strings of hexadecimal
digits, by convention either four or six digits.  unihexfill invokes
unihexgen for each non-comment line in its input file.  If a codepoint
is less than or equal to "FFFF" (i.e., 0xFFFF), a four-digit hexadecimal
number is encoded within the corresponding Unifont glyph as two digits
on each of two rows.  Otherwise, a six-digit hexadecimal number is
encoded as three digits on each of two rows.


File: unifont.info,  Node: unihexfill OPTIONS,  Next: unihexfill FILES,  Prev: unihexfill DESCRIPTION,  Up: unihexfill

3.21.4 unihexfill OPTIONS
-------------------------

There are no options.


File: unifont.info,  Node: unihexfill FILES,  Next: unihexfill EXAMPLE,  Prev: unihexfill OPTIONS,  Up: unihexfill

3.21.5 unihexfill FILES
-----------------------

*.txt as input; *.hex as output.


File: unifont.info,  Node: unihexfill EXAMPLE,  Next: unihexfill SEE ALSO,  Prev: unihexfill FILES,  Up: unihexfill

3.21.6 unihexfill EXAMPLE
-------------------------

In the Unifont source package, the file font/plane01/Makefile generates
Unicode Plane 1 hexadecimal filler glyphs of unassigned code points
within assigned scripts with this single-line command:

     ../../bin/unihexfill < unassigned-ranges.txt > unassigned.hex


File: unifont.info,  Node: unihexfill SEE ALSO,  Next: unihexfill AUTHOR,  Prev: unihexfill EXAMPLE,  Up: unihexfill

3.21.7 unihexfill SEE ALSO
--------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexgen(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unihexfill AUTHOR,  Next: unihexfill LICENSE,  Prev: unihexfill SEE ALSO,  Up: unihexfill

3.21.8 unihexfill AUTHOR
------------------------

unihexfill was written by Paul Hardy.


File: unifont.info,  Node: unihexfill LICENSE,  Next: unihexfill BUGS,  Prev: unihexfill AUTHOR,  Up: unihexfill

3.21.9 unihexfill LICENSE
-------------------------

unihexfill is Copyright (C) 2014 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unihexfill BUGS,  Prev: unihexfill LICENSE,  Up: unihexfill

3.21.10 unihexfill BUGS
-----------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its input file.  Any line that appears to
begin with a hexadecimal digit is fed to unihexgen.


File: unifont.info,  Node: unihexgen,  Next: unipagecount,  Prev: unihexfill,  Up: Reference

3.22 unihexgen
==============

* Menu:

* unihexgen NAME::
* unihexgen SYNOPSIS::
* unihexgen DESCRIPTION::
* unihexgen OPTIONS::
* unihexgen FILES::
* unihexgen EXAMPLE::
* unihexgen SEE ALSO::
* unihexgen AUTHOR::
* unihexgen LICENSE::
* unihexgen BUGS::


File: unifont.info,  Node: unihexgen NAME,  Next: unihexgen SYNOPSIS,  Up: unihexgen

3.22.1 unihexgen NAME
---------------------

unihexgen - Generate Unifont 4- or 6-digit hexadecimal glyphs


File: unifont.info,  Node: unihexgen SYNOPSIS,  Next: unihexgen DESCRIPTION,  Prev: unihexgen NAME,  Up: unihexgen

3.22.2 unihexgen SYNOPSIS
-------------------------

unihexgen startpoint endpoint


File: unifont.info,  Node: unihexgen DESCRIPTION,  Next: unihexgen OPTIONS,  Prev: unihexgen SYNOPSIS,  Up: unihexgen

3.22.3 unihexgen DESCRIPTION
----------------------------

unihexgen produces unifont.hex entries in the Unicode code point range
startpoint to endpoint (specified as the two command-line arguments).
Output is to STDOUT. If a codepoint is less than or equal to "FFFF"
(i.e., 0xFFFF), a four-digit hexadecimal number is encoded within the
corresponding Unifont glyph as two digits on each of two rows.
Otherwise, a six-digit hexadecimal number is encoded as three digits on
each of two rows.


File: unifont.info,  Node: unihexgen OPTIONS,  Next: unihexgen FILES,  Prev: unihexgen DESCRIPTION,  Up: unihexgen

3.22.4 unihexgen OPTIONS
------------------------

There are no options.


File: unifont.info,  Node: unihexgen FILES,  Next: unihexgen EXAMPLE,  Prev: unihexgen OPTIONS,  Up: unihexgen

3.22.5 unihexgen FILES
----------------------

*.hex as output.


File: unifont.info,  Node: unihexgen EXAMPLE,  Next: unihexgen SEE ALSO,  Prev: unihexgen FILES,  Up: unihexgen

3.22.6 unihexgen EXAMPLE
------------------------

To generate the Private Use Area glyphs in the Unicode range
U+E000..U+F8FF, invoke unihexgen with these arguments:

     unihexgen e000 f8ff


File: unifont.info,  Node: unihexgen SEE ALSO,  Next: unihexgen AUTHOR,  Prev: unihexgen EXAMPLE,  Up: unihexgen

3.22.7 unihexgen SEE ALSO
-------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unipagecount(1), unipng2hex(1)


File: unifont.info,  Node: unihexgen AUTHOR,  Next: unihexgen LICENSE,  Prev: unihexgen SEE ALSO,  Up: unihexgen

3.22.8 unihexgen AUTHOR
-----------------------

unihexgen was written by Paul Hardy.


File: unifont.info,  Node: unihexgen LICENSE,  Next: unihexgen BUGS,  Prev: unihexgen AUTHOR,  Up: unihexgen

3.22.9 unihexgen LICENSE
------------------------

unihexgen is Copyright (C) 2013 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unihexgen BUGS,  Prev: unihexgen LICENSE,  Up: unihexgen

3.22.10 unihexgen BUGS
----------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its command-line arguments.  If they're not
in the format of the original bitmapped output from unihexgen, all bets
are off.


File: unifont.info,  Node: unipagecount,  Next: unipng2hex,  Prev: unihexgen,  Up: Reference

3.23 unipagecount
=================

* Menu:

* unipagecount NAME::
* unipagecount SYNOPSIS::
* unipagecount DESCRIPTION::
* unipagecount OPTIONS::
* unipagecount FILES::
* unipagecount SEE ALSO::
* unipagecount AUTHOR::
* unipagecount LICENSE::
* unipagecount BUGS::


File: unifont.info,  Node: unipagecount NAME,  Next: unipagecount SYNOPSIS,  Up: unipagecount

3.23.1 unipagecount NAME
------------------------

unipagecount - Count the assigned code points in a GNU Unifont .hex file


File: unifont.info,  Node: unipagecount SYNOPSIS,  Next: unipagecount DESCRIPTION,  Prev: unipagecount NAME,  Up: unipagecount

3.23.2 unipagecount SYNOPSIS
----------------------------

unipagecount [-ppagenum] [-h|-l]


File: unifont.info,  Node: unipagecount DESCRIPTION,  Next: unipagecount OPTIONS,  Prev: unipagecount SYNOPSIS,  Up: unipagecount

3.23.3 unipagecount DESCRIPTION
-------------------------------

unipagecount reads a GNU Unifont .hex file from STDIN and prints a 16 by
16 grid of the number of defined code points in each 256 character block
within a Unicode plane to STDOUT. Code points proceed from left to
right, then top to bottom.  In all planes, code points U+*FFFE and
U+*FFFF are not expected in the input hex file; they are reserved and
always counted as being present in a plane.


File: unifont.info,  Node: unipagecount OPTIONS,  Next: unipagecount FILES,  Prev: unipagecount DESCRIPTION,  Up: unipagecount

3.23.4 unipagecount OPTIONS
---------------------------

'-Pplanenum'
     Select a Unicode plane, from 0 through 16, inclusive.  If not
     specified, unipagecount defaults to Plane 0 (the Basic Multilingual
     Plane).

'-ppagenum'
     Just print information on one 256 code point "page" rather than the
     entire Basic Multilingual Plane.  This prints a 16 by 16 table with
     an asterisk in every code point that has an assigned glyph.

'-h'
     Print an HTML table with color-coded cell background colors instead
     of a plain text table.

'-l'
     [The letter "l"]: Print hyperlinks to font bitmaps in the HTML
     table.  To create the bitmaps themselves, use the unihex2bmp
     program.  The bitmaps are assumed to be in the directory "bmp/".


File: unifont.info,  Node: unipagecount FILES,  Next: unipagecount SEE ALSO,  Prev: unipagecount OPTIONS,  Up: unipagecount

3.23.5 unipagecount FILES
-------------------------

*.hex GNU Unifont font files


File: unifont.info,  Node: unipagecount SEE ALSO,  Next: unipagecount AUTHOR,  Prev: unipagecount FILES,  Up: unipagecount

3.23.6 unipagecount SEE ALSO
----------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipng2hex(1)


File: unifont.info,  Node: unipagecount AUTHOR,  Next: unipagecount LICENSE,  Prev: unipagecount SEE ALSO,  Up: unipagecount

3.23.7 unipagecount AUTHOR
--------------------------

unipagecount was written by Paul Hardy.


File: unifont.info,  Node: unipagecount LICENSE,  Next: unipagecount BUGS,  Prev: unipagecount AUTHOR,  Up: unipagecount

3.23.8 unipagecount LICENSE
---------------------------

unipagecount is Copyright (C) 2007, 2014 Paul Hardy.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unipagecount BUGS,  Prev: unipagecount LICENSE,  Up: unipagecount

3.23.9 unipagecount BUGS
------------------------

No known real bugs exist, except that this software does not perform
extensive error checking on its input files.  If they're not in the
format of the original GNU Unifont .hex file, all bets are off.


File: unifont.info,  Node: unipng2hex,  Prev: unipagecount,  Up: Reference

3.24 unipng2hex
===============

* Menu:

* unipng2hex NAME::
* unipng2hex SYNOPSIS::
* unipng2hex DESCRIPTION::
* unipng2hex OPTIONS::
* unipng2hex EXAMPLE::
* unipng2hex FILES::
* unipng2hex SEE ALSO::
* unipng2hex AUTHOR::
* unipng2hex LICENSE::
* unipng2hex BUGS::


File: unifont.info,  Node: unipng2hex NAME,  Next: unipng2hex SYNOPSIS,  Up: unipng2hex

3.24.1 unipng2hex NAME
----------------------

unipng2hex - Portable Network Graphics to GNU Unifont .hex file
converter


File: unifont.info,  Node: unipng2hex SYNOPSIS,  Next: unipng2hex DESCRIPTION,  Prev: unipng2hex NAME,  Up: unipng2hex

3.24.2 unipng2hex SYNOPSIS
--------------------------

unipng2hex -i input_file.png [-o output_file.hex ] [-w width ]


File: unifont.info,  Node: unipng2hex DESCRIPTION,  Next: unipng2hex OPTIONS,  Prev: unipng2hex SYNOPSIS,  Up: unipng2hex

3.24.3 unipng2hex DESCRIPTION
-----------------------------

unipng2hex reads a PNG file produced by unihex2png before or after
editing, and converts it back into a Unifont .hex format file.  The PNG
file contains a block of 256 Unicode code points arranged in a 16 by 16
grid.  Each code point appears in a 32 by 32 or a 40 by 40 pixel grid.
Characters are either 16, 24 or 32 pixel rows high, depending on the
"-r" parameter specified by unihex2png.  They can be 8, 16, 24, or 32
pixel columns wide (widths of 32 are only supported for 32 pixel row
tall characters).


File: unifont.info,  Node: unipng2hex OPTIONS,  Next: unipng2hex EXAMPLE,  Prev: unipng2hex DESCRIPTION,  Up: unipng2hex

3.24.4 unipng2hex OPTIONS
-------------------------

'-i'
     Specify the input file.

'-o'
     Specify the output file.  If omitted, a file in the Unifont .hex
     format is written to STDOUT.

'-w width'
     Specify the minimum width of the output glyphs.  Valid values are
     16, 24, and 32.  The default is no minimum width.

'-h'
     Print a help message of options and exit.


File: unifont.info,  Node: unipng2hex EXAMPLE,  Next: unipng2hex FILES,  Prev: unipng2hex OPTIONS,  Up: unipng2hex

3.24.5 unipng2hex EXAMPLE
-------------------------

Sample usage:

     unipng2hex -i my_input_file.png -o my_output_file.hex


File: unifont.info,  Node: unipng2hex FILES,  Next: unipng2hex SEE ALSO,  Prev: unipng2hex EXAMPLE,  Up: unipng2hex

3.24.6 unipng2hex FILES
-----------------------

*.png graphics files


File: unifont.info,  Node: unipng2hex SEE ALSO,  Next: unipng2hex AUTHOR,  Prev: unipng2hex FILES,  Up: unipng2hex

3.24.7 unipng2hex SEE ALSO
--------------------------

bdfimplode(1), hex2bdf(1), hex2sfd(1), hexbraille(1), hexdraw(1),
hexkinya(1), hexmerge(1), johab2ucs2(1), unibdf2hex(1), unibmp2hex(1),
unicoverage(1), unidup(1), unifont(5), unifont-viewer(1),
unifontchojung(1), unifontksx(1), unifontpic(1), unigencircles(1),
unigenwidth(1), unihex2bmp(1), unihex2png(1), unihexfill(1),
unihexgen(1), unipagecount(1)


File: unifont.info,  Node: unipng2hex AUTHOR,  Next: unipng2hex LICENSE,  Prev: unipng2hex SEE ALSO,  Up: unipng2hex

3.24.8 unipng2hex AUTHOR
------------------------

unipng2hex was written by Andrew Miller, starting by converting Paul
Hardy's unibmp2hex C program to Perl.


File: unifont.info,  Node: unipng2hex LICENSE,  Next: unipng2hex BUGS,  Prev: unipng2hex AUTHOR,  Up: unipng2hex

3.24.9 unipng2hex LICENSE
-------------------------

unipng2hex is Copyright (C) 2007, 2008 Paul Hardy, (C) 2013 Andrew
Miller.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.


File: unifont.info,  Node: unipng2hex BUGS,  Prev: unipng2hex LICENSE,  Up: unipng2hex

3.24.10 unipng2hex BUGS
-----------------------

No known real bugs exist, but the optional pixel rows parameter is not
yet supported by all other Unifont utilities.  Use of glyphs taller than
the default of 16 pixels is considered experimental.  Currently
unihex2png, unipng2hex, hexdraw, and hex2bdf tentatively support glyphs
that are 16, 24, and 32 pixels tall.

Also, this software does not perform extensive error checking on its
input files.  If they're not in the format of the original PNG output
from unihex2png, all bets are off.

If the output file is for a "page" containing space code points and the
PNG file squares for those code points are not empty, unipng2hex
preserves the graphics as they are drawn.

unipng2hex is designed to work with black and white pixels; do not use
other colors.



Tag Table:
Node: Top687
Node: Introduction942
Node: Tutorial2401
Node: Unicode3446
Node: Unifont Structure4339
Node: Hex File Format5314
Node: Using Graphical Tools8728
Node: Using Hexdraw15432
Node: Checking Coverage18248
Node: Custom Builds20961
Node: Viewing a Unifont File Interactively24021
Node: Seeing the Big Picture (Literally!)25099
Node: Combining Circles26732
Node: Installing Fonts on GNU/Linux29246
Node: Creating a Brand New Font30582
Node: Updates to Unicode32579
Node: Reference34348
Node: bdfimplode34807
Node: bdfimplode NAME35102
Node: bdfimplode SYNOPSIS35300
Node: bdfimplode DESCRIPTION35522
Node: bdfimplode FILES35807
Node: bdfimplode SEE ALSO35995
Node: bdfimplode AUTHOR36520
Node: bdfimplode LICENSE36732
Node: bdfimplode BUGS37190
Node: hex2bdf37474
Node: hex2bdf NAME37795
Node: hex2bdf SYNOPSIS37975
Node: hex2bdf DESCRIPTION38176
Node: hex2bdf OPTIONS38483
Node: hex2bdf EXAMPLE39262
Node: hex2bdf FILES39499
Node: hex2bdf SEE ALSO39677
Node: hex2bdf AUTHOR40187
Node: hex2bdf LICENSE40378
Node: hex2bdf BUGS40815
Node: hex2sfd41057
Node: hex2sfd NAME41338
Node: hex2sfd SYNOPSIS41531
Node: hex2sfd DESCRIPTION41732
Node: hex2sfd FILES42123
Node: hex2sfd SEE ALSO42352
Node: hex2sfd AUTHOR42862
Node: hex2sfd LICENSE43120
Node: hex2sfd BUGS43595
Node: hexbraille43737
Node: hexbraille NAME44048
Node: hexbraille SYNOPSIS44258
Node: hexbraille DESCRIPTION44463
Node: hexbraille FILES44791
Node: hexbraille SEE ALSO44992
Node: hexbraille AUTHOR45517
Node: hexbraille LICENSE45832
Node: hexbraille BUGS46290
Node: hexdraw46447
Node: hexdraw NAME46729
Node: hexdraw SYNOPSIS46924
Node: hexdraw DESCRIPTION47168
Node: hexdraw FILES47554
Node: hexdraw SEE ALSO47736
Node: hexdraw AUTHOR48246
Node: hexdraw LICENSE48437
Node: hexdraw BUGS48874
Node: hexkinya49016
Node: hexkinya NAME49306
Node: hexkinya SYNOPSIS49488
Node: hexkinya DESCRIPTION49675
Node: hexkinya FILES50096
Node: hexkinya SEE ALSO50261
Node: hexkinya AUTHOR50776
Node: hexkinya LICENSE50973
Node: hexkinya BUGS51419
Node: hexmerge51566
Node: hexmerge NAME51859
Node: hexmerge SYNOPSIS52052
Node: hexmerge DESCRIPTION52275
Node: hexmerge FILES52549
Node: hexmerge SEE ALSO52737
Node: hexmerge AUTHOR53252
Node: hexmerge LICENSE53450
Node: hexmerge BUGS53894
Node: johab2ucs254041
Node: johab2ucs2 NAME54356
Node: johab2ucs2 SYNOPSIS54565
Node: johab2ucs2 DESCRIPTION54787
Node: johab2ucs2 FILES55130
Node: johab2ucs2 SEE ALSO55318
Node: johab2ucs2 AUTHOR55843
Node: johab2ucs2 LICENSE56149
Node: johab2ucs2 BUGS56646
Node: unibdf2hex56803
Node: unibdf2hex NAME57120
Node: unibdf2hex SYNOPSIS57319
Node: unibdf2hex DESCRIPTION57541
Node: unibdf2hex FILES58132
Node: unibdf2hex SEE ALSO58332
Node: unibdf2hex AUTHOR58857
Node: unibdf2hex LICENSE59065
Node: unibdf2hex BUGS59519
Node: unibmp2hex59676
Node: unibmp2hex NAME60019
Node: unibmp2hex SYNOPSIS60227
Node: unibmp2hex DESCRIPTION60472
Node: unibmp2hex OPTIONS61005
Node: unibmp2hex FILES62105
Node: unibmp2hex SEE ALSO62305
Node: unibmp2hex AUTHOR62832
Node: unibmp2hex LICENSE63042
Node: unibmp2hex BUGS63504
Node: unicoverage64037
Node: unicoverage NAME64387
Node: unicoverage SYNOPSIS64587
Node: unicoverage DESCRIPTION64814
Node: unicoverage OPTIONS65217
Node: unicoverage FILES65581
Node: unicoverage SEE ALSO65795
Node: unicoverage AUTHOR66327
Node: unicoverage LICENSE66544
Node: unicoverage BUGS67013
Node: unidup67270
Node: unidup NAME67550
Node: unidup SYNOPSIS67743
Node: unidup DESCRIPTION67923
Node: unidup FILES68356
Node: unidup SEE ALSO68534
Node: unidup AUTHOR69041
Node: unidup LICENSE69223
Node: unidup BUGS69657
Node: unifont-viewer69796
Node: unifont-viewer NAME70159
Node: unifont-viewer SYNOPSIS70389
Node: unifont-viewer DESCRIPTION70608
Node: unifont-viewer FILES71478
Node: unifont-viewer SEE ALSO71704
Node: unifont-viewer AUTHOR72251
Node: unifont-viewer LICENSE72492
Node: unifont-viewer BUGS72979
Node: unifontchojung73158
Node: unifontchojung NAME73525
Node: unifontchojung SYNOPSIS73755
Node: unifontchojung DESCRIPTION74007
Node: unifontchojung FILES74574
Node: unifontchojung SEE ALSO74788
Node: unifontchojung AUTHOR75335
Node: unifontchojung LICENSE75573
Node: unifontchojung BUGS76057
Node: unifontksx76236
Node: unifontksx NAME76559
Node: unifontksx SYNOPSIS76765
Node: unifontksx DESCRIPTION76989
Node: unifontksx FILES77601
Node: unifontksx SEE ALSO77791
Node: unifontksx AUTHOR78318
Node: unifontksx LICENSE78528
Node: unifontksx BUGS78984
Node: unifontpic79143
Node: unifontpic NAME79512
Node: unifontpic SYNOPSIS79731
Node: unifontpic DESCRIPTION79971
Node: unifontpic OPTIONS80889
Node: unifontpic EXAMPLES81839
Node: unifontpic FILES82263
Node: unifontpic SEE ALSO82462
Node: unifontpic AUTHOR82989
Node: unifontpic LICENSE83199
Node: unifontpic BUGS83655
Node: unigencircles83816
Node: unigencircles NAME84195
Node: unigencircles SYNOPSIS84416
Node: unigencircles DESCRIPTION84692
Node: unigencircles EXAMPLE85657
Node: unigencircles FILES85941
Node: unigencircles SEE ALSO86275
Node: unigencircles AUTHOR86817
Node: unigencircles LICENSE87048
Node: unigencircles BUGS87525
Node: unigenwidth87792
Node: unigenwidth NAME88149
Node: unigenwidth SYNOPSIS88364
Node: unigenwidth DESCRIPTION88586
Node: unigenwidth EXAMPLE89133
Node: unigenwidth FILES89384
Node: unigenwidth SEE ALSO89636
Node: unigenwidth AUTHOR90168
Node: unigenwidth LICENSE90385
Node: unigenwidth BUGS90848
Node: unihex2bmp91105
Node: unihex2bmp NAME91448
Node: unihex2bmp SYNOPSIS91656
Node: unihex2bmp DESCRIPTION91906
Node: unihex2bmp OPTIONS92686
Node: unihex2bmp FILES93501
Node: unihex2bmp SEE ALSO93699
Node: unihex2bmp AUTHOR94226
Node: unihex2bmp LICENSE94436
Node: unihex2bmp BUGS94892
Node: unihex2png95314
Node: unihex2png NAME95679
Node: unihex2png SYNOPSIS95892
Node: unihex2png DESCRIPTION96146
Node: unihex2png OPTIONS97090
Node: unihex2png EXAMPLE97849
Node: unihex2png FILES98095
Node: unihex2png SEE ALSO98293
Node: unihex2png AUTHOR98820
Node: unihex2png LICENSE99099
Node: unihex2png BUGS99579
Node: unihexfill100266
Node: unihexfill NAME100630
Node: unihexfill SYNOPSIS100841
Node: unihexfill DESCRIPTION101074
Node: unihexfill OPTIONS102079
Node: unihexfill FILES102277
Node: unihexfill EXAMPLE102478
Node: unihexfill SEE ALSO102914
Node: unihexfill AUTHOR103443
Node: unihexfill LICENSE103653
Node: unihexfill BUGS104109
Node: unihexgen104440
Node: unihexgen NAME104794
Node: unihexgen SYNOPSIS104990
Node: unihexgen DESCRIPTION105192
Node: unihexgen OPTIONS105805
Node: unihexgen FILES105997
Node: unihexgen EXAMPLE106176
Node: unihexgen SEE ALSO106485
Node: unihexgen AUTHOR107009
Node: unihexgen LICENSE107212
Node: unihexgen BUGS107661
Node: unipagecount108018
Node: unipagecount NAME108383
Node: unipagecount SYNOPSIS108605
Node: unipagecount DESCRIPTION108828
Node: unipagecount OPTIONS109421
Node: unipagecount FILES110316
Node: unipagecount SEE ALSO110526
Node: unipagecount AUTHOR111063
Node: unipagecount LICENSE111287
Node: unipagecount BUGS111763
Node: unipng2hex112112
Node: unipng2hex NAME112460
Node: unipng2hex SYNOPSIS112673
Node: unipng2hex DESCRIPTION112914
Node: unipng2hex OPTIONS113609
Node: unipng2hex EXAMPLE114122
Node: unipng2hex FILES114368
Node: unipng2hex SEE ALSO114558
Node: unipng2hex AUTHOR115085
Node: unipng2hex LICENSE115364
Node: unipng2hex BUGS115850

End Tag Table
