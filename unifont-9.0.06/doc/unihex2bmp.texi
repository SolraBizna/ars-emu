@comment TROFF INPUT: .TH UNIHEX2BMP 1 "2007 Dec 31"

@node unihex2bmp
@section unihex2bmp
@c DEBUG: print_menu("@section")

@menu
* unihex2bmp NAME::
* unihex2bmp SYNOPSIS::
* unihex2bmp DESCRIPTION::
* unihex2bmp OPTIONS::
* unihex2bmp FILES::
* unihex2bmp SEE ALSO::
* unihex2bmp AUTHOR::
* unihex2bmp LICENSE::
* unihex2bmp BUGS::

@end menu


@comment TROFF INPUT: .SH NAME

@node unihex2bmp NAME
@subsection unihex2bmp NAME
@c DEBUG: print_menu("unihex2bmp NAME")

unihex2bmp @minus{} GNU Unifont .hex file to bitmap graphics file converter
@comment TROFF INPUT: .SH SYNOPSIS

@node unihex2bmp SYNOPSIS
@subsection unihex2bmp SYNOPSIS
@c DEBUG: print_menu("unihex2bmp SYNOPSIS")

@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .B unihex2bmp
@b{unihex2bmp}
[-phexpage] [-iinput@t{_}file.hex] [-ooutput@t{_}file.bmp] [-f] [-w]
@comment TROFF INPUT: .SH DESCRIPTION

@node unihex2bmp DESCRIPTION
@subsection unihex2bmp DESCRIPTION
@c DEBUG: print_menu("unihex2bmp DESCRIPTION")

@comment TROFF INPUT: .B unihex2bmp
@b{unihex2bmp}
reads a GNU Unifont .hex file Unicode page of 256 code points
and converts the page into a Microsoft Windows Bitmap (.bmp) or
Wireless Bitmap (.wbmp) file.  The bitmap file displays the glyphs
of a Unicode block of 256 code points in a 32 by 32 pixel grid.
The glyphs themselves must be 16 rows high, and either 8 columns or
16 columns wide. The default page is 0; that is, the range
U+0000 through U+00FF.
@comment TROFF INPUT: .PP

The bitmap can be printed.  It can also be edited with a bitmap editor.
An edited bitmap can then be re-converted into a GNU Unifont .hex file
with the
@comment TROFF INPUT: .B unibmp2hex
@b{unibmp2hex}
command.
@comment TROFF INPUT: .SH OPTIONS

@node unihex2bmp OPTIONS
@subsection unihex2bmp OPTIONS
@c DEBUG: print_menu("unihex2bmp OPTIONS")

@comment TROFF INPUT: .TP 12

@c ---------------------------------------------------------------------
@table @code
@item -ppagenum
Extract page
@comment TROFF INPUT: .I pagenum
@i{pagenum}
from the .hex file.  The default is Page 0 (Unicode range
U+0000 through U+00FF).  Note that "page" is not a standard
Unicode term.  It refers to an output bitmap graphics page of
16 by 16 code points.
@comment TROFF INPUT: .TP

@item -i
Specify the input file. The default is STDIN.
@comment TROFF INPUT: .TP

@item -o
Specify the output file. The default is STDOUT.
@comment TROFF INPUT: .TP

@item -f
"Flip" (transpose) the grid so it matches the Unicode standard order.
@comment TROFF INPUT: .TP

@item -w
Produce a Wireless Bitmap format file instead of a Microsoft Windows
Bitmap file.
@comment TROFF INPUT: .PP

Sample usage:
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
unihex2bmp -imy@t{_}input@t{_}file.hex -omy@t{_}output@t{_}file.bmp
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .SH FILES

@end table

@c ---------------------------------------------------------------------

@node unihex2bmp FILES
@subsection unihex2bmp FILES
@c DEBUG: print_menu("unihex2bmp FILES")

*.hex GNU Unifont font files
@comment TROFF INPUT: .SH SEE ALSO

@node unihex2bmp SEE ALSO
@subsection unihex2bmp SEE ALSO
@c DEBUG: print_menu("unihex2bmp SEE ALSO")

@comment TROFF INPUT: .BR bdfimplode(1),
@b{bdfimplode(1),}
@comment TROFF INPUT: .BR hex2bdf(1),
@b{hex2bdf(1),}
@comment TROFF INPUT: .BR hex2sfd(1),
@b{hex2sfd(1),}
@comment TROFF INPUT: .BR hexbraille(1),
@b{hexbraille(1),}
@comment TROFF INPUT: .BR hexdraw(1),
@b{hexdraw(1),}
@comment TROFF INPUT: .BR hexkinya(1),
@b{hexkinya(1),}
@comment TROFF INPUT: .BR hexmerge(1),
@b{hexmerge(1),}
@comment TROFF INPUT: .BR johab2ucs2(1),
@b{johab2ucs2(1),}
@comment TROFF INPUT: .BR unibdf2hex(1),
@b{unibdf2hex(1),}
@comment TROFF INPUT: .BR unibmp2hex(1),
@b{unibmp2hex(1),}
@comment TROFF INPUT: .BR unicoverage(1),
@b{unicoverage(1),}
@comment TROFF INPUT: .BR unidup(1),
@b{unidup(1),}
@comment TROFF INPUT: .BR unifont(5),
@b{unifont(5),}
@comment TROFF INPUT: .BR unifont-viewer(1),
@b{unifont-viewer(1),}
@comment TROFF INPUT: .BR unifontchojung(1),
@b{unifontchojung(1),}
@comment TROFF INPUT: .BR unifontksx(1),
@b{unifontksx(1),}
@comment TROFF INPUT: .BR unifontpic(1),
@b{unifontpic(1),}
@comment TROFF INPUT: .BR unigencircles(1),
@b{unigencircles(1),}
@comment TROFF INPUT: .BR unigenwidth(1),
@b{unigenwidth(1),}
@comment TROFF INPUT: .BR unihex2png(1),
@b{unihex2png(1),}
@comment TROFF INPUT: .BR unihexfill(1),
@b{unihexfill(1),}
@comment TROFF INPUT: .BR unihexgen(1),
@b{unihexgen(1),}
@comment TROFF INPUT: .BR unipagecount(1),
@b{unipagecount(1),}
@comment TROFF INPUT: .BR unipng2hex(1)
@b{unipng2hex(1)}
@comment TROFF INPUT: .SH AUTHOR

@node unihex2bmp AUTHOR
@subsection unihex2bmp AUTHOR
@c DEBUG: print_menu("unihex2bmp AUTHOR")

@comment TROFF INPUT: .B unihex2bmp
@b{unihex2bmp}
was written by Paul Hardy.
@comment TROFF INPUT: .SH LICENSE

@node unihex2bmp LICENSE
@subsection unihex2bmp LICENSE
@c DEBUG: print_menu("unihex2bmp LICENSE")

@comment TROFF INPUT: .B unihex2bmp
@b{unihex2bmp}
is Copyright @copyright{} 2007 Paul Hardy.
@comment TROFF INPUT: .PP

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
@comment TROFF INPUT: .SH BUGS

@node unihex2bmp BUGS
@subsection unihex2bmp BUGS
@c DEBUG: print_menu("unihex2bmp BUGS")

No known real bugs exist, except that this software does not perform
extensive error checking on its input files.  If they're not in the
format of the original GNU Unifont .hex file, all bets are off.
Lines can be terminated either with line feed, or
carriage return plus line feed.
